1
00:00:00,240 --> 00:00:01,720
Hello you beautiful people.

2
00:00:01,790 --> 00:00:06,610
In the last video you saw how you can compile source code from scratch and install it on your machine.

3
00:00:06,810 --> 00:00:11,190
And this is a great process for understanding and customizing the software running on your computer.

4
00:00:11,250 --> 00:00:14,590
But for most everyday things it's usually just a bit too much work.

5
00:00:14,730 --> 00:00:18,990
So what if you have a library of software that you can browse and have all pre-compiled and ready to

6
00:00:18,990 --> 00:00:22,570
go with a push of a button or one of a command.

7
00:00:22,950 --> 00:00:26,400
Well that's exactly what the software repositories and package managers are for.

8
00:00:26,460 --> 00:00:29,060
And in this video we'll be covering what they're all about.

9
00:00:29,060 --> 00:00:32,610
So in this video you're going to learn about the different software repositories that are available

10
00:00:32,610 --> 00:00:36,350
on the buntu and how to search them using the online Web sites.

11
00:00:36,540 --> 00:00:39,860
And by the end of the video you'll know what the different repositories are.

12
00:00:40,020 --> 00:00:42,630
And you also know what a package manager is.

13
00:00:42,630 --> 00:00:45,230
So this lecture is going to be jam packed with useful information.

14
00:00:45,240 --> 00:00:47,170
Let's go ahead and get right into it.

15
00:00:48,470 --> 00:00:52,000
OK so the first thing we need to know is what a software repository is.

16
00:00:52,190 --> 00:00:56,280
So think of a software repository as a big library filled with software.

17
00:00:56,360 --> 00:01:00,530
Then when you go to a library you can search for books you can read about the books you can look at

18
00:01:00,530 --> 00:01:04,910
different versions of the books and you can compare which books that you might want to borrow and then

19
00:01:04,910 --> 00:01:06,110
check them out at the library.

20
00:01:06,200 --> 00:01:10,770
And a software repository is like a library except you don't have to give the software back.

21
00:01:10,850 --> 00:01:15,230
And even better when a new version of the software comes along you can automatically update that piece

22
00:01:15,230 --> 00:01:20,690
of software and all the software on your entire system to the new versions that are available with a

23
00:01:20,690 --> 00:01:21,410
simple command.

24
00:01:21,410 --> 00:01:26,480
And this helps keep your system secure and reliable and is also totally epic.

25
00:01:26,540 --> 00:01:31,160
Now in a buntu there are four different repositories and each repository stores a different type of

26
00:01:31,160 --> 00:01:36,920
software and they are described on the main web site for buntu which is a buntu dot com.

27
00:01:36,920 --> 00:01:42,830
Now if we head over to help the buntu dot com for a slash community for Slash repositories with a capital

28
00:01:42,830 --> 00:01:47,880
are known for its rateable into the capital you put a link in the resources by the way.

29
00:01:48,020 --> 00:01:52,280
If we head over to that we'll see information about the different repositories.

30
00:01:52,280 --> 00:01:56,690
OK so you see a section here that says what are the repositories and you can see that for a buntu there

31
00:01:56,690 --> 00:01:58,750
are four main repositories.

32
00:01:58,940 --> 00:02:05,660
Now the main repository is the repository that holds all the software that is actively maintained and

33
00:02:05,690 --> 00:02:10,810
updated by Canonical and Canonical is the company that created a buntu.

34
00:02:10,820 --> 00:02:15,420
Now all the software in there is free as in freedom and is also open source.

35
00:02:15,500 --> 00:02:16,050
OK.

36
00:02:16,130 --> 00:02:21,980
Now the main repository is the most reliable repository and you should try and select from suitable

37
00:02:21,980 --> 00:02:26,480
software in the main repository at the first instance where possible.

38
00:02:26,480 --> 00:02:29,710
Now the second open to repository is the universe repository.

39
00:02:29,720 --> 00:02:34,490
Now software in this repository is also free as in freedom and it's also open source.

40
00:02:34,520 --> 00:02:39,380
However instead of being maintained by Canonical it is maintained by the buntu community and as a result

41
00:02:39,410 --> 00:02:45,400
it is therefore theoretically maybe less rigorous and more prone to bugs than the main repository.

42
00:02:45,410 --> 00:02:46,970
But most of the time it's fantastic.

43
00:02:46,970 --> 00:02:54,020
In my experience now the third repository in the open system is the restricted repository and the restrictive

44
00:02:54,020 --> 00:03:00,260
repository includes proprietary software and drivers for company specific devices such as wireless cards

45
00:03:00,260 --> 00:03:01,070
and so on.

46
00:03:01,460 --> 00:03:06,260
Now this repository helps ensure that the device on your computer are more likely to work out of the

47
00:03:06,260 --> 00:03:06,680
box.

48
00:03:06,680 --> 00:03:07,350
Shall we say.

49
00:03:07,450 --> 00:03:11,900
But the software is usually proprietary and therefore doesn't usually give you the freedoms of the other

50
00:03:11,900 --> 00:03:13,370
software it gives you.

51
00:03:13,370 --> 00:03:18,320
Also you might or might not be able to directly examine the source code of the software in the restricted

52
00:03:18,320 --> 00:03:19,760
repository and this depend.

53
00:03:19,760 --> 00:03:22,440
This depends on the specific use case.

54
00:03:22,700 --> 00:03:29,480
And the fourth and final repository is the multiverse repository non-motorists repository contains software

55
00:03:29,480 --> 00:03:32,890
that is restricted either by copyright or legal issues.

56
00:03:32,900 --> 00:03:37,420
The software in the multiverse repository might or might not have accessible source code.

57
00:03:37,520 --> 00:03:42,620
You can see here that the buntu philosophy is generally about giving the user choice about what software

58
00:03:42,620 --> 00:03:44,000
they want to use.

59
00:03:44,000 --> 00:03:48,380
There are two repositories that are free and open source which are the main and the universe repositories

60
00:03:48,710 --> 00:03:53,920
and there are two other repositories which which aren't free at open source or where the software is

61
00:03:53,930 --> 00:03:55,480
unlikely to be so.

62
00:03:55,490 --> 00:04:00,380
So to some people using non-free software is abhorrent and completely unacceptable whereas to others

63
00:04:00,380 --> 00:04:02,480
it will be fine if it gets the job done.

64
00:04:02,630 --> 00:04:05,040
No buntu leaves that choice up to you.

65
00:04:05,300 --> 00:04:10,790
But if the distributions such as Fedora only include free software in the repositories and do not include

66
00:04:10,790 --> 00:04:12,460
software that is non-free.

67
00:04:12,530 --> 00:04:16,850
Now this could cause reductions inconvenience but it has other benefits.

68
00:04:16,940 --> 00:04:20,070
Now buntu leaves the choice up to you as to what you prefer.

69
00:04:20,270 --> 00:04:24,320
And now that you've been informed about the free software debate you are in a better position to choose

70
00:04:24,320 --> 00:04:25,250
for yourself.

71
00:04:25,310 --> 00:04:29,630
So now that we understand what the for buntu repositories are and the differences between them let me

72
00:04:29,630 --> 00:04:31,060
show you where they hang out online.

73
00:04:31,080 --> 00:04:36,640
No I don't mean social media but there's a link called packages door open to dot com.

74
00:04:36,690 --> 00:04:42,350
So if we head over to that here we can browse through the list of packages and we can see different

75
00:04:42,350 --> 00:04:46,890
links depending upon what version of a buntu that we're running.

76
00:04:46,910 --> 00:04:51,720
Now the code name will change for every new release of a buntu in alphabetical order.

77
00:04:51,920 --> 00:04:59,080
So for example the current one is called artful aardvark or artful for short.

78
00:04:59,180 --> 00:05:01,940
And you can see what the code name for your distribution is.

79
00:05:01,940 --> 00:05:03,870
By using this command in the command line.

80
00:05:03,890 --> 00:05:05,940
Open up your terminal and you type it.

81
00:05:05,940 --> 00:05:07,410
LS B underscore.

82
00:05:07,460 --> 00:05:11,590
Release a K and you give it the option and it will.

83
00:05:11,600 --> 00:05:16,250
It will print out all the information about your buntu distribution and you can see that mine is called

84
00:05:16,310 --> 00:05:20,820
awful Aardvark and it tells me at the bottom here the code name is artful.

85
00:05:20,870 --> 00:05:28,670
So I would click on the artful link which you can see here to open at see what packages are applicable

86
00:05:28,670 --> 00:05:28,940
to me.

87
00:05:28,960 --> 00:05:32,960
But you can click on whatever code name is appropriate for you when you watch this video.

88
00:05:32,990 --> 00:05:34,700
OK it all works basically the same.

89
00:05:34,850 --> 00:05:39,980
Now in here are all the packages of package categories OK so you can see a whole bunch of categories

90
00:05:40,370 --> 00:05:41,650
in here.

91
00:05:41,870 --> 00:05:44,700
You can see for example we've got things for web servers.

92
00:05:44,700 --> 00:05:52,240
You can see things that we've got for fonts we've got editors we've got documentation databases administration

93
00:05:52,240 --> 00:05:58,700
utilities and a whole lot of programming languages Peifer and text processing video.

94
00:05:58,720 --> 00:05:59,670
It just goes on and on.

95
00:05:59,670 --> 00:06:01,140
Ok so many different things.

96
00:06:01,210 --> 00:06:02,250
And these are just categories.

97
00:06:02,250 --> 00:06:05,370
OK so this blows the different packages inside each of these categories.

98
00:06:05,410 --> 00:06:09,130
But if we scroll down we'll notice that there's a couple of important links down here.

99
00:06:09,130 --> 00:06:11,050
We've got the all packages link.

100
00:06:11,200 --> 00:06:14,850
We've got the compact compressed text list so this one here is just a.

101
00:06:15,120 --> 00:06:22,990
If I open it in a new tab we can see that it's just a kind of text file here with a list of every single

102
00:06:22,990 --> 00:06:24,410
one of the packages.

103
00:06:24,520 --> 00:06:30,160
And I downloaded this text file when I was preparing the course and ran it through the word count command

104
00:06:30,160 --> 00:06:35,740
and counted the amount of lines after cutting any header information and found that there was 74000

105
00:06:35,800 --> 00:06:39,150
and sixty packages which is crazy.

106
00:06:39,340 --> 00:06:40,980
But you know it's there for you to play with.

107
00:06:41,020 --> 00:06:43,690
I'm just going to close up but we're not interested in that for this video.

108
00:06:43,690 --> 00:06:48,460
What we're interested in is this link here that says all packages and if I click that it'll open up

109
00:06:48,520 --> 00:06:56,260
a web page that shows you all the packages so let's just wait for that to load up a second.

110
00:06:56,290 --> 00:06:57,430
So there we are.

111
00:06:57,430 --> 00:07:01,770
So now we get a web page that gives us a link to each available package in a buntu.

112
00:07:01,870 --> 00:07:07,660
And you may notice that it shows you in square brackets which repository the things came from so we

113
00:07:07,660 --> 00:07:13,570
can see here that this zero HD package came from the universe repository.

114
00:07:13,570 --> 00:07:17,800
And if we scroll down we'll be able to see some that come from other repositories as well we see and

115
00:07:17,800 --> 00:07:20,440
we're getting a lot from the universe repository B.S. here.

116
00:07:20,440 --> 00:07:22,870
We've got one coming from multi-verse.

117
00:07:23,160 --> 00:07:28,270
And if you find a package that doesn't have anything in a square brackets next to it that means it's

118
00:07:28,270 --> 00:07:30,270
from the main repository.

119
00:07:30,430 --> 00:07:35,200
So for example there's a lib bench and you can see it doesn't have anything next to it.

120
00:07:35,470 --> 00:07:37,750
That means it comes from the main repository.

121
00:07:37,860 --> 00:07:40,630
Guess that's just something to be aware of as well.

122
00:07:40,690 --> 00:07:45,520
But for now for the purposes of this video let's just go ahead and click on the top link this this package

123
00:07:45,760 --> 00:07:47,410
called Zero a day.

124
00:07:47,420 --> 00:07:53,170
And when we click on it will notice that a new web page opens and we see that the package is called

125
00:07:53,170 --> 00:07:53,960
Zero ID.

126
00:07:54,010 --> 00:07:55,610
We can see the package name or the top.

127
00:07:55,810 --> 00:08:00,580
And then in these parentheses we can see the version number of the package.

128
00:08:00,760 --> 00:08:05,380
And then we can see in the square brackets the repository that the package has come from.

129
00:08:05,380 --> 00:08:09,790
And as I said if there isn't any such information then it's from the main repository.

130
00:08:10,030 --> 00:08:11,230
OK.

131
00:08:11,560 --> 00:08:17,230
And as we know the universe repository contains most content free and open source software but it's

132
00:08:17,230 --> 00:08:21,910
maintained by the community and doesn't receive any formal updates or maintenance from the buntu developers

133
00:08:22,240 --> 00:08:23,440
at canonical.

134
00:08:23,440 --> 00:08:31,840
Then underneath that we can see a list called other packages OK that are related to this package and

135
00:08:31,840 --> 00:08:36,220
we can see that we may have required version numbers in these parentheses here.

136
00:08:36,220 --> 00:08:42,560
So for example this DP K.G. package must be greater than or equal to version 1.1 5.6.

137
00:08:42,660 --> 00:08:43,050
Okay.

138
00:08:43,180 --> 00:08:47,410
And you can see that there's quite a few different packages that are related to this one.

139
00:08:47,470 --> 00:08:47,770
OK.

140
00:08:47,800 --> 00:08:51,640
And you can see that they have a special symbol at the front as well.

141
00:08:51,660 --> 00:08:55,610
And we can see that red means that it depends on this package.

142
00:08:55,730 --> 00:09:01,500
OK so the red dot means that the zero Adey package depends on these packages.

143
00:09:01,780 --> 00:09:08,800
So that means in order to install 0 A.D. We need to install all of these packages with red dots in front

144
00:09:08,800 --> 00:09:09,910
of them as well.

145
00:09:09,910 --> 00:09:15,880
If we want zero 80 to work OK but the red dot isn't the only symbol that can appear next to a package

146
00:09:15,940 --> 00:09:19,420
in the package is less we can see that there are other symbols as well.

147
00:09:19,510 --> 00:09:20,050
OK.

148
00:09:20,050 --> 00:09:24,700
So you can see on the key up here that the green diamond next to a package means that zero A.D. would

149
00:09:24,700 --> 00:09:27,290
recommend you to install another package.

150
00:09:27,340 --> 00:09:28,840
So let's make this a bit more general.

151
00:09:28,880 --> 00:09:32,450
That's called a package that you want to install which is our case 0 8.

152
00:09:32,590 --> 00:09:33,640
Let's call that package.

153
00:09:33,790 --> 00:09:38,120
Ok then let's call a random package in the other packages list package B the Cape.

154
00:09:38,140 --> 00:09:44,740
So if package a recommends package B that means that in order for package a to function normally we

155
00:09:44,740 --> 00:09:48,210
should get package B but package a will function without it.

156
00:09:48,280 --> 00:09:52,700
OK then the blue square would say that package a suggested to us and other package.

157
00:09:52,750 --> 00:09:53,150
OK.

158
00:09:53,260 --> 00:09:59,480
So recommends means that it will function without it but we recommend it for normal use.

159
00:09:59,500 --> 00:09:59,820
OK.

160
00:09:59,830 --> 00:10:01,340
Dependence means it won't work.

161
00:10:01,390 --> 00:10:06,370
If you don't get these packages recommended means it will work but not not like how you know it should

162
00:10:07,780 --> 00:10:13,330
suggest package is just some entirely optional stuff that things you might like to check out.

163
00:10:13,390 --> 00:10:13,970
OK.

164
00:10:13,970 --> 00:10:21,240
And the final one is the enhances anything with a black dot means it enhances the current package in

165
00:10:21,250 --> 00:10:23,410
some way or another maybe new through New features.

166
00:10:23,410 --> 00:10:25,080
But again it's not required.

167
00:10:25,150 --> 00:10:25,570
OK.

168
00:10:25,720 --> 00:10:32,230
And if we scroll down to the bottom of this page we can see the sizes we can see what size the package

169
00:10:32,260 --> 00:10:38,020
is to download and we can see what size it is when it's on compressed and installed and we can also

170
00:10:38,020 --> 00:10:44,370
see what what the files each package contains which is useful so you can click on that.

171
00:10:44,380 --> 00:10:48,960
You can see a list of each of the files that each package contains and you can see that there's different

172
00:10:48,960 --> 00:10:51,420
packages for different computer architecture.

173
00:10:51,430 --> 00:10:57,120
So for example if you've got a computer architecture that as an EMT 64 architecture you can download

174
00:10:57,120 --> 00:11:03,870
this one package and if you've got one for the 386 computer architecture you would download this package

175
00:11:04,170 --> 00:11:10,080
and you can see the computer's architecture by opening up the terminal and typing you name dash.

176
00:11:10,360 --> 00:11:13,100
OK we can see that in our virtual machine we have the.

177
00:11:13,140 --> 00:11:16,340
We're running on an x 86 64 architecture.

178
00:11:16,410 --> 00:11:20,820
Now I am 64 and X 86 64 are the same.

179
00:11:20,820 --> 00:11:26,340
So we would get the HMD 64 package is most appropriate for us here.

180
00:11:26,380 --> 00:11:33,630
Now if you just get X 86 then then you download the IDE 386 package because that's probably the one

181
00:11:33,630 --> 00:11:36,190
most and most appropriate for your computer.

182
00:11:36,300 --> 00:11:38,180
So they might be thinking wait a minute Ziyad.

183
00:11:38,190 --> 00:11:39,240
Hold on hold on hold on.

184
00:11:39,240 --> 00:11:44,580
Are you saying that in order to install software I first have to search through thousands of packages

185
00:11:44,920 --> 00:11:50,640
then find out what dependencies it has and after that I must ensure that I download all of those different

186
00:11:50,640 --> 00:11:54,860
packages and satisfy their dependencies and so on and so on.

187
00:11:54,870 --> 00:11:58,740
But before I download all of those I need to make sure that they're all the right version number and

188
00:11:58,740 --> 00:12:01,560
that the packages are appropriate for my computer's architecture.

189
00:12:01,590 --> 00:12:03,770
You have got to be kidding.

190
00:12:04,350 --> 00:12:06,450
Well that's what I'd be thinking anyway.

191
00:12:06,570 --> 00:12:11,430
But no the good news is that there's a command line tool installed on your computer that deals with

192
00:12:11,430 --> 00:12:17,310
all of this stuff and it's called your package manager and the actual program differs from distribution

193
00:12:17,310 --> 00:12:17,960
to distribution.

194
00:12:17,970 --> 00:12:25,400
But on a buntu the package manager is called apt spelt a P T which stands for Advanced packaging top.

195
00:12:25,410 --> 00:12:29,640
And this is what we're going to do use to do all this hard work for us.

196
00:12:29,750 --> 00:12:33,460
And in the next video you're going to see how to use it.

197
00:12:34,230 --> 00:12:37,360
But first let's have a review of what we've learned in this video.

198
00:12:37,470 --> 00:12:42,240
So in this video you've learned that a software repository is kind of like a library but for software

199
00:12:42,710 --> 00:12:45,190
except you don't need to give the software back.

200
00:12:45,300 --> 00:12:50,780
Now it does differ for other distributions but in a buntu there are four main software repositories.

201
00:12:50,970 --> 00:12:55,980
So this is the main repository that contains free and open source software that is actively maintained

202
00:12:56,220 --> 00:12:58,130
by the Ubuntu developers.

203
00:12:58,140 --> 00:13:03,210
Does the universe repository that also contains free and open source software but it's maintained by

204
00:13:03,210 --> 00:13:05,790
the community instead of the Ubuntu developers.

205
00:13:05,940 --> 00:13:10,780
There's the restrictive repository that contains proprietary software for device drivers.

206
00:13:10,800 --> 00:13:15,810
Now software in this repository isn't likely to be open source although it might be but it's not actively

207
00:13:15,810 --> 00:13:18,740
maintained by the developers.

208
00:13:18,840 --> 00:13:23,400
And finally there is the multiverse repository that has software that is limited by copyright or legal

209
00:13:23,400 --> 00:13:24,240
issues.

210
00:13:24,240 --> 00:13:28,350
Again it's unlikely that the software will be open source in the multiverse repository but it might

211
00:13:28,350 --> 00:13:28,970
be.

212
00:13:29,100 --> 00:13:32,270
Now with your knowledge about free software the canoe project and so on.

213
00:13:32,370 --> 00:13:36,480
You can decide for yourself whether you will only use free software from the main or universe repositories

214
00:13:36,730 --> 00:13:41,070
whether you are happy to use the software from the restricted on multi-verse repositories aswell but

215
00:13:41,130 --> 00:13:43,380
to leave that choice completely up to you.

216
00:13:43,620 --> 00:13:49,110
Now when we wanted to see a list of packages available to us we headed over two packages dot to dot

217
00:13:49,110 --> 00:13:51,690
com and a linker that is in the resources section.

218
00:13:51,690 --> 00:13:57,120
In case you're interested and we saw all the packages were opened were broken up by our distribution's

219
00:13:57,120 --> 00:13:58,040
code name.

220
00:13:58,170 --> 00:14:03,270
And you can see the code name for your distribution by entering the LSP underscore release command with

221
00:14:03,270 --> 00:14:09,330
the option and we saw the command name was artful but yours might be different depending upon when you

222
00:14:09,330 --> 00:14:11,810
download it open to him when you watch this video.

223
00:14:11,820 --> 00:14:17,460
Now all the packages are organized by a theme or sections and you can see a full list of packages by

224
00:14:17,460 --> 00:14:22,200
scrolling down to the bottom of that page and clicking on the appropriate link and his package tells

225
00:14:22,200 --> 00:14:25,450
you what repository it comes from in square brackets next to his name.

226
00:14:25,620 --> 00:14:27,540
But it has no square brackets next to name.

227
00:14:27,540 --> 00:14:29,340
Then it comes from the main repository.

228
00:14:29,670 --> 00:14:34,140
And when you click on a package you'll find that you get more information about it as well as information

229
00:14:34,140 --> 00:14:36,500
about other packages that are related to it.

230
00:14:36,500 --> 00:14:39,600
Now some of these packages will be required for that package to run.

231
00:14:39,600 --> 00:14:42,470
And these are marked with a red dot and cold.

232
00:14:42,710 --> 00:14:46,550
They are the one package you set to depend upon these packages.

233
00:14:46,650 --> 00:14:51,420
Some will be recommended packages and required for normal functioning and these will be indicated by

234
00:14:51,420 --> 00:14:52,770
green diamonds.

235
00:14:52,770 --> 00:14:58,230
Some will be suggested packages which are there just for interest and is indicated by blue squares and

236
00:14:58,230 --> 00:15:04,020
some will be called enhance that will enhance the packages functionality in some way and these will

237
00:15:04,200 --> 00:15:06,290
be indicated by black dots.

238
00:15:06,470 --> 00:15:10,800
And finally we discussed that due to the complexity of managing dependencies and ensuring software has

239
00:15:10,800 --> 00:15:16,590
the correct version number and so on software management is usually done using a program called a package

240
00:15:16,590 --> 00:15:17,230
manager.

241
00:15:17,390 --> 00:15:22,020
Now package managers differ from distribution to distribution but on a to the package manager is called

242
00:15:22,150 --> 00:15:22,800
apt.

243
00:15:22,830 --> 00:15:26,020
Which stands for Advanced packaging too.

244
00:15:26,550 --> 00:15:30,840
So in the next video you're going to learn how to use the advanced packaging tool to upgrade your system

245
00:15:30,990 --> 00:15:37,240
and search for new software now using a package manager is a critical piece of using a new Linux system

246
00:15:37,560 --> 00:15:39,400
and luckily it's also super easy.

247
00:15:39,450 --> 00:15:44,280
So for incredible superpowers beyond your wildest dreams I'll see you in the next video.
