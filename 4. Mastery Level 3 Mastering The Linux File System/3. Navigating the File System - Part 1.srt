1
00:00:00,120 --> 00:00:01,560
Hello you beautiful people.

2
00:00:01,560 --> 00:00:07,070
And in this video you're going to begin to use the command line to move around your linux file system.

3
00:00:07,080 --> 00:00:08,790
Very very exciting stuff.

4
00:00:08,790 --> 00:00:13,200
Now once you learn the techniques that you'll learn over the next few videos and begin to use them for

5
00:00:13,200 --> 00:00:18,260
your everyday tasks you'll begin to find that they are faster and more effective than the graphical

6
00:00:18,270 --> 00:00:21,440
point and click methods that you are most likely using right now.

7
00:00:21,600 --> 00:00:26,880
So in this video you're going to learn how to use the PWT and the LS commands to know where you are

8
00:00:26,880 --> 00:00:28,950
and your file system and what is around you.

9
00:00:28,980 --> 00:00:32,730
And by the end of the video you'll know where you are on your file system and what's around you using

10
00:00:32,730 --> 00:00:37,020
the command line and you'll be ready to start moving around using some other commands that I'll show

11
00:00:37,020 --> 00:00:38,350
you in the next video.

12
00:00:38,700 --> 00:00:42,620
So I hope you're very very excited let's go ahead and jump right into it.

13
00:00:43,400 --> 00:00:45,530
OK so here we are in the terminal.

14
00:00:45,530 --> 00:00:49,630
Now the first thing we'd like to know when navigating the system is where we currently are.

15
00:00:49,760 --> 00:00:55,550
And the shell already tells us this over here on the left you'll see a bunch of text that is known as

16
00:00:55,550 --> 00:01:00,190
your shell prompt and the show prompt is everything up to this dollar sign.

17
00:01:00,320 --> 00:01:00,840
OK.

18
00:01:00,980 --> 00:01:02,870
Now let's break it down to show you what each bit means.

19
00:01:02,870 --> 00:01:07,230
First of all it tells you the user who is logged in which is Ziyad on this computer.

20
00:01:07,430 --> 00:01:08,870
Then you can add some more.

21
00:01:09,120 --> 00:01:13,060
Ok then you've got the name of the computer which is VB.

22
00:01:13,070 --> 00:01:18,170
We called it when we set up and installed a virtual machine and VB is short for Virtual Box.

23
00:01:18,200 --> 00:01:20,930
Then you've got a code which is these two dots on top of one another.

24
00:01:21,080 --> 00:01:25,230
And then you have this squiggle that's called Tilda.

25
00:01:25,340 --> 00:01:25,900
OK.

26
00:01:25,910 --> 00:01:31,250
Now in the bash shell which is the shell that we're currently using that Tildy that squiggle is a short

27
00:01:31,250 --> 00:01:34,700
way of representing the current user's home directory.

28
00:01:34,700 --> 00:01:40,340
So whenever you see that tilde or when you see that squiggle It just means the path to the current user's

29
00:01:40,550 --> 00:01:41,510
home directory.

30
00:01:41,510 --> 00:01:47,540
So I show prompt is basically telling us that we are in the home directory for the current user which

31
00:01:47,540 --> 00:01:49,320
we can tell is Ziyad.

32
00:01:49,450 --> 00:01:56,630
OK so we can actually confirm at any time what directory or what location our shell is currently operating

33
00:01:56,630 --> 00:02:03,170
in but using the PWT command and the PWT command stands we'll print working directory.

34
00:02:03,300 --> 00:02:07,110
The PETER BEATTIE command will just tell us the folder that our shell is currently operating in.

35
00:02:07,270 --> 00:02:14,000
So if I type PWT and I hit Enter we'll see the full path to my home directory appear which is slash

36
00:02:14,000 --> 00:02:16,060
home slash Ziyad.

37
00:02:16,440 --> 00:02:21,950
Now the path starts all the way from the root directory the very base directory which is the slash and

38
00:02:21,950 --> 00:02:26,970
works its way down until we get to the home directory for the user Ziyad which is me.

39
00:02:27,020 --> 00:02:31,100
Now we can actually see this if we click on our files and that opens up.

40
00:02:31,100 --> 00:02:35,360
If you click on other locations then click on computer.

41
00:02:35,540 --> 00:02:38,600
This will open us up in the very base directory.

42
00:02:38,600 --> 00:02:41,500
OK this is the this is the base directory for the system.

43
00:02:41,600 --> 00:02:49,190
And if I click on home up here then click on Ziyad that is where we currently are in the show at the

44
00:02:49,190 --> 00:02:49,620
moment.

45
00:02:49,700 --> 00:02:50,220
OK.

46
00:02:50,300 --> 00:02:54,960
Now because the path starts all the way from the base directly from the slash.

47
00:02:55,100 --> 00:02:57,890
It's known as an absolute path.

48
00:02:58,150 --> 00:03:02,810
So now that we know where we are and we know that our shell is operating inside of our home folder how

49
00:03:02,810 --> 00:03:05,430
can we take a look around and see what's in the home folder.

50
00:03:05,630 --> 00:03:09,960
Well first of all we can do it using a graphical user interface we could click on our files here and

51
00:03:09,980 --> 00:03:14,780
that's automatically going to open us up in our home folder and we can see the folders such as a desktop

52
00:03:15,080 --> 00:03:19,490
documents downloads pictures and so on and so on.

53
00:03:19,510 --> 00:03:23,220
OK now to see something similar on the command line.

54
00:03:23,360 --> 00:03:30,140
We need to use the l s command now the LS is short for the list and the ls command will list of files

55
00:03:30,530 --> 00:03:31,390
in a directory.

56
00:03:31,550 --> 00:03:38,480
OK so if we take a look at the man page for LS The manual page for ls will see the LS can take a path

57
00:03:38,930 --> 00:03:40,200
to some folders it says here.

58
00:03:40,210 --> 00:03:44,820
File says list information about the files which is the current directory.

59
00:03:44,960 --> 00:03:47,990
By default it was a side note.

60
00:03:48,020 --> 00:03:53,090
Ls does not accept standard input so you can't pipe to it and instead you need to give it everything

61
00:03:53,120 --> 00:03:55,520
as command line arguments.

62
00:03:55,520 --> 00:03:56,690
That's just an aside.

63
00:03:56,840 --> 00:04:02,340
Like I said let's try and use the rest of us go on to see what's going on in our home directory.

64
00:04:02,390 --> 00:04:03,690
There are multiple ways to do this.

65
00:04:03,950 --> 00:04:08,160
I could do it the long way and I could give it the full absolute file path.

66
00:04:08,170 --> 00:04:15,560
I could type LS slash home slash Ziyad Mackerras the long way to do it all because I know that the tilda

67
00:04:15,770 --> 00:04:17,450
represents my home folder.

68
00:04:17,450 --> 00:04:22,410
I could give it a shortcut I could do ls and give it the tilda and that's exactly the same thing.

69
00:04:22,410 --> 00:04:25,850
Matilda is just the home directory for the current user.

70
00:04:26,060 --> 00:04:32,810
It's just a shocker or even better because I know ls will by default list out the contents of the folder

71
00:04:32,810 --> 00:04:34,130
that I'm currently in.

72
00:04:34,130 --> 00:04:39,550
And because I'm in my home folder I can just type LS Ok.

73
00:04:39,740 --> 00:04:44,220
Ls will by default listo the contents of the directory that your cell is currently in.

74
00:04:44,240 --> 00:04:48,980
And because we're in our home folder I can just do ls without any command and arguments.

75
00:04:49,100 --> 00:04:51,020
So let's go ahead and do that.

76
00:04:51,020 --> 00:04:51,710
There we go.

77
00:04:51,860 --> 00:04:52,740
So in there.

78
00:04:52,760 --> 00:04:59,150
Now what's come out we can see several blue words not by default blue text from the US command indicates

79
00:04:59,200 --> 00:05:00,200
folders.

80
00:05:00,380 --> 00:05:03,590
But to make that clearer we can we can give the ls command.

81
00:05:03,600 --> 00:05:05,460
The uppercase f option.

82
00:05:05,570 --> 00:05:12,440
So we put a dash in uppercase f and f is meant to mean classify a guy with emphasis on f..

83
00:05:12,500 --> 00:05:15,780
OK so now when I do that for the LS at f.

84
00:05:15,950 --> 00:05:21,020
Now we can see that the items that have a slash at the end of folders.

85
00:05:21,040 --> 00:05:26,550
Now if I just make a file in our home directory by echoing the word hello into it.

86
00:05:26,550 --> 00:05:29,770
I'm going to call it file RTX state.

87
00:05:29,800 --> 00:05:34,130
So here we're using redirection to create the file there it is like you because it has been made.

88
00:05:34,130 --> 00:05:40,610
If I knew don't if I now do ls dash f we can see that the folders all have Slash's after them and are

89
00:05:40,610 --> 00:05:41,300
in blue.

90
00:05:41,480 --> 00:05:45,400
But the file itself doesn't have a slash after it and its text is in white.

91
00:05:45,490 --> 00:05:51,190
So you can see that the ls command allows us to see the difference between files and folders files and

92
00:05:51,190 --> 00:05:51,860
directories.

93
00:05:51,940 --> 00:05:53,120
OK.

94
00:05:53,650 --> 00:05:59,560
But certainly to bear in mind is if I take that ls dash f output and put that into another file called

95
00:05:59,560 --> 00:06:01,130
List Dotti x.

96
00:06:01,540 --> 00:06:05,300
Ok then I open up a list RTX day.

97
00:06:05,830 --> 00:06:14,170
You can see that there is no coloring but you can see the difference between folders and folders and

98
00:06:14,170 --> 00:06:19,060
files just by looking for the things that end and slashes things and then slashes all the folders and

99
00:06:19,060 --> 00:06:21,490
the things that don't all of the files.

100
00:06:21,610 --> 00:06:26,500
So you know this is really good if you want to save information to a file and be able to tell at a glance

101
00:06:26,500 --> 00:06:32,050
or make a program tell at a glance what's a folder and what's not so you can selectively operate on

102
00:06:32,050 --> 00:06:33,140
specific files or not.

103
00:06:33,150 --> 00:06:34,460
So just to it little shortcut.

104
00:06:34,610 --> 00:06:35,090
OK.

105
00:06:35,320 --> 00:06:40,960
Now a much more useful option than the f option the option for the ls command is the l option.

106
00:06:40,960 --> 00:06:44,710
Now if I do ls dash l let me clear the screen first.

107
00:06:44,710 --> 00:06:50,620
If I do ls dash l this puts everything in the long form format and you can tell me that we get a lot

108
00:06:50,620 --> 00:06:55,450
more information about our files and directories including the file permissions over here on the left.

109
00:06:55,530 --> 00:06:55,980
OK.

110
00:06:56,080 --> 00:06:58,560
Anything that starts with a D is a directory.

111
00:06:58,770 --> 00:06:59,350
OK.

112
00:06:59,470 --> 00:07:06,550
And then this file permissions so for the user read write execute for the group the user is in the group.

113
00:07:06,580 --> 00:07:08,670
Being here is this column the user is this column.

114
00:07:08,710 --> 00:07:14,500
So the user read write execute for the group just read and execute no writing and for everyone else

115
00:07:14,500 --> 00:07:16,840
just reading and executing.

116
00:07:16,840 --> 00:07:23,350
Then you've got the user the the that the file belongs to the group the file belongs to how large the

117
00:07:23,350 --> 00:07:28,120
file is when it was last edited and what the file is actually called.

118
00:07:28,330 --> 00:07:34,750
OK so this is a this is the dash element is a command that you use probably very very often because

119
00:07:34,750 --> 00:07:40,510
you can get a lot of information about your files much more than just using the normal ls command.

120
00:07:40,510 --> 00:07:44,950
The other thing I should mention is that this column here with all the numbers in the file sizes this

121
00:07:44,950 --> 00:07:50,800
shows the file size in bytes and to make that a bit clearer and you can give the ls command not only

122
00:07:50,800 --> 00:07:56,320
the l option but also the hate option and the hate option stands for human readable it makes the file

123
00:07:56,320 --> 00:07:58,230
size a bit easier to read.

124
00:07:58,360 --> 00:08:04,270
So if we do ls Dasch El-Hage we can now see that it's telling us that the desktop thing is about four

125
00:08:04,270 --> 00:08:05,260
kilobytes.

126
00:08:05,260 --> 00:08:07,420
This is about four kilobytes.

127
00:08:07,420 --> 00:08:08,890
This one is just six bytes.

128
00:08:08,890 --> 00:08:12,940
This is ninety three bytes and these are four kilobytes if you have things that are megabytes in size

129
00:08:12,940 --> 00:08:13,320
it would.

130
00:08:13,350 --> 00:08:14,610
It would say an EM.

131
00:08:14,740 --> 00:08:18,270
If you had things that were you know gigabytes in size it would say a G.

132
00:08:18,310 --> 00:08:21,010
And in general it just makes the stuff a bit easier to read.

133
00:08:21,040 --> 00:08:26,070
The case of the LS dash with the option you've got the permissions on the file.

134
00:08:26,110 --> 00:08:27,270
So it begins with a D.

135
00:08:27,280 --> 00:08:28,960
It's a directory it begins with a dash.

136
00:08:28,960 --> 00:08:30,080
It's just a file.

137
00:08:30,160 --> 00:08:37,210
The first three things are the permissions for the user read write execute the next one is for the group

138
00:08:37,610 --> 00:08:38,810
that the file is in.

139
00:08:38,810 --> 00:08:41,460
In this case it just has read and execute but no right.

140
00:08:41,470 --> 00:08:43,800
And then this third column is for everyone else.

141
00:08:43,870 --> 00:08:44,630
This is the No.

142
00:08:44,650 --> 00:08:46,210
So just read and execute in that sense.

143
00:08:46,210 --> 00:08:49,500
This is the amount of hard links to the file but don't worry about those.

144
00:08:49,510 --> 00:08:51,630
This is the use of the file belongs to.

145
00:08:51,670 --> 00:08:53,930
This is the group the file belongs to.

146
00:08:54,100 --> 00:08:56,620
This is the file size in bytes.

147
00:08:56,650 --> 00:09:02,230
This is the date the file was last edited and then this is the file itself.

148
00:09:02,240 --> 00:09:06,200
OK so I'll make sure that the information is available on the Chichi at the end of the section.

149
00:09:06,310 --> 00:09:08,550
But now you can start to see if I clear the screen.

150
00:09:08,660 --> 00:09:13,770
We can now use the PWT command to see where we are on the LS command to see what's around us.

151
00:09:13,840 --> 00:09:19,960
All that's left to be able to understand is how to use the CD command to actually change where we are

152
00:09:19,960 --> 00:09:22,520
on the file system so that we can move about.

153
00:09:22,720 --> 00:09:26,710
But I think in the interests of time we're going to save that until the next video.

154
00:09:27,010 --> 00:09:31,370
So in the next we're going to be covering how to use the CD command to actually change where you are

155
00:09:31,370 --> 00:09:36,940
on the file system and also be going through a few examples to see how these three commands work together

156
00:09:37,150 --> 00:09:41,780
to help you navigate the file system much faster than would be possible using just pointing and clicking.

157
00:09:41,920 --> 00:09:44,680
So for all that goodness I'll see you in the next video.
