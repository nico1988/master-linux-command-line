1
00:00:00,270 --> 00:00:01,500
Hello you beautiful people.

2
00:00:01,500 --> 00:00:02,610
And welcome back.

3
00:00:02,610 --> 00:00:07,140
Now in this video we're going to be discussing how you can take your sporting abilities to the next

4
00:00:07,140 --> 00:00:12,900
level by looking at how you can sort data that is in tabular format so data that comes in tables by

5
00:00:12,900 --> 00:00:16,440
showing you how you can sort of open down various columns.

6
00:00:16,440 --> 00:00:21,330
Now this is super cool because it means that you can do all this kind of data sorting right from the

7
00:00:21,330 --> 00:00:23,610
command line you don't need to open up a spreadsheet software.

8
00:00:23,610 --> 00:00:28,550
You can do it right there in the terminal and save all that juicy juicy processing power.

9
00:00:28,560 --> 00:00:31,320
So let's go ahead and jump right into it and see how this works.

10
00:00:32,110 --> 00:00:36,320
All right so sometimes you get a lot of data out of your commands.

11
00:00:36,340 --> 00:00:42,510
And one example of this is the ls command with the l option so the LS dash L command.

12
00:00:42,520 --> 00:00:45,310
So for example if we did the on the ETSI folder.

13
00:00:45,310 --> 00:00:49,660
So this is the fall that contains all of the system configuration files and you can see that we just

14
00:00:49,660 --> 00:00:51,410
get a whole bunch of results.

15
00:00:51,440 --> 00:00:54,230
It's like you just get loads and loads and loads of stuff coming out of that.

16
00:00:54,310 --> 00:00:55,180
OK.

17
00:00:55,630 --> 00:00:59,950
But you know just to make this a bit easier to see let's just pass that into the head command and get

18
00:00:59,950 --> 00:01:01,500
the first 20 lines.

19
00:01:01,650 --> 00:01:05,040
And that we are there the first 20 lines of output.

20
00:01:05,380 --> 00:01:10,320
OK so what if we wanted to sort this data by the column.

21
00:01:10,310 --> 00:01:16,660
So what if we wanted to sort by certain columns you can actually do that in the sort command using the

22
00:01:16,660 --> 00:01:17,890
K option.

23
00:01:17,890 --> 00:01:22,780
So for example if we wanted to sort by now I guess this column which is about the file size is so you

24
00:01:22,780 --> 00:01:28,900
see this one here that this column is all about file sizes so maybe want to sort by date for example

25
00:01:28,900 --> 00:01:32,290
and we wanted to sort by date which would be these few columns or whatever.

26
00:01:32,440 --> 00:01:34,760
You can do all that in the sort command.

27
00:01:34,900 --> 00:01:37,650
So let's just see how we might go about doing this.

28
00:01:37,660 --> 00:01:42,610
So how we do it if I just clear the screen is you'd pipe it into the sort command all the data into

29
00:01:42,610 --> 00:01:45,120
the sort command and you give it the k option.

30
00:01:45,160 --> 00:01:51,130
Now after the K option you need to tell the sort command how to sort this input using what the sort

31
00:01:51,130 --> 00:01:53,810
command calls a key definition or a key def.

32
00:01:53,850 --> 00:01:55,930
OK this is all in the man page by the way.

33
00:01:55,930 --> 00:01:57,870
But let me show you how it works.

34
00:01:57,880 --> 00:02:01,490
First you tell it what column it should sort by.

35
00:02:01,510 --> 00:02:01,900
OK.

36
00:02:01,980 --> 00:02:05,940
So if I just scroll up a little bit you can see our results that we got before.

37
00:02:06,070 --> 00:02:09,780
We want to sort by the column with these big numbers here.

38
00:02:09,960 --> 00:02:10,590
OK.

39
00:02:10,660 --> 00:02:14,650
Now those numbers as I said are actually file sizes in bytes.

40
00:02:14,650 --> 00:02:18,600
So let's say we want to sort of files from largest to smallest.

41
00:02:18,760 --> 00:02:24,260
OK so first we need to give the key def the column number we want to sort by say if we count here's

42
00:02:24,280 --> 00:02:24,960
column 1.

43
00:02:24,960 --> 00:02:28,680
So that's one column too that's column 3.

44
00:02:28,930 --> 00:02:32,760
That's column 4 and that's column 5.

45
00:02:32,810 --> 00:02:34,980
OK so the column number is five.

46
00:02:34,980 --> 00:02:35,820
So if we come back to I know.

47
00:02:35,830 --> 00:02:37,880
Come on I'm going to type 5.

48
00:02:38,040 --> 00:02:38,910
OK.

49
00:02:39,210 --> 00:02:43,380
Then you need to tell it and then you basically can pass it.

50
00:02:43,390 --> 00:02:44,980
Any other options that we like.

51
00:02:45,040 --> 00:02:50,440
For example if we want to sort numerically we would type an AK and you can pass any options you like

52
00:02:50,450 --> 00:02:54,840
so if you wanted to sort reverse you type in awe there as well just like you've seen in the last video

53
00:02:54,840 --> 00:02:57,390
you wanted unique type of you and that's it.

54
00:02:57,400 --> 00:03:00,850
That's how you make your key definition of let's just have the end for now.

55
00:03:00,850 --> 00:03:05,710
So what we're saying here is a ok listo everything that's in the Anssi folder take the first 20 lines

56
00:03:05,740 --> 00:03:09,230
and then sort it by the fifth column.

57
00:03:09,370 --> 00:03:10,140
OK.

58
00:03:10,690 --> 00:03:15,820
And when we press Enter we'll see that yes actually the data has been sorted by the fifth column you

59
00:03:15,820 --> 00:03:18,480
can see that we're starting with the smallest files first.

60
00:03:18,700 --> 00:03:20,580
I'm working all the way up until the biggest.

61
00:03:20,650 --> 00:03:24,810
But actually we wanted it the other way round didn't we we wanted the biggest files first.

62
00:03:24,940 --> 00:03:28,350
So if we wanted to make that happen we'll just type in are there.

63
00:03:28,360 --> 00:03:31,060
So we're saying sort numerically but in reverse order.

64
00:03:31,090 --> 00:03:34,120
So largest to smallest instead of smallest to largest.

65
00:03:34,330 --> 00:03:37,930
Remembering that the sort can by default go small to big.

66
00:03:37,930 --> 00:03:39,350
Now we're going big to small.

67
00:03:39,460 --> 00:03:41,600
So when we do that we see that yep.

68
00:03:41,710 --> 00:03:46,880
Now we're starting at big four thousand ninety six and getting smaller as we go down.

69
00:03:46,900 --> 00:03:52,570
So that's supercool right like we've just taken a big set of data and sorted it by columns which is

70
00:03:52,570 --> 00:03:57,100
an amazing ability to be able to just do from the minute we didn't have to open anything like Microsoft

71
00:03:57,100 --> 00:03:57,820
Excel.

72
00:03:57,820 --> 00:04:01,460
We just sorted the data straight from the command line.

73
00:04:01,600 --> 00:04:07,300
But one thing that you might notice especially with the LS output is that these file saw these file

74
00:04:07,300 --> 00:04:09,160
sizes are kind of hard to interpret right.

75
00:04:09,160 --> 00:04:13,630
These are all in bytes and I don't know about you but I tend to read things in kilobytes or megabytes

76
00:04:13,630 --> 00:04:17,030
or some of them either I don't tend to read it directly in bytes.

77
00:04:17,120 --> 00:04:24,670
So as you know the ls command has an option that allows you to read that you know to give the data in

78
00:04:24,670 --> 00:04:25,950
human readable format.

79
00:04:25,950 --> 00:04:30,460
So if we do that with a human readable format you can see now that what's happening is we're getting

80
00:04:30,830 --> 00:04:34,990
it setting up the amount of kilobytes that said this is for kilobytes focalize we'll get about three

81
00:04:34,990 --> 00:04:39,910
kilobytes 2.2 kilobytes and then the rest are just in bytes and it would say megabytes gigabytes whatever

82
00:04:39,910 --> 00:04:41,590
it was for files that we're dealing with.

83
00:04:41,590 --> 00:04:46,330
So it's the hate option for the ls command that gives you human readable output but you may have noticed

84
00:04:46,370 --> 00:04:47,910
this is just completely messed up.

85
00:04:47,920 --> 00:04:49,280
Assorting right.

86
00:04:49,360 --> 00:04:53,920
It's just like before we were sorting perfectly like we were sorting biggest are the top smallest at

87
00:04:53,920 --> 00:04:54,470
the bottom.

88
00:04:54,580 --> 00:04:56,810
But now it's just doing whatever it wants.

89
00:04:56,860 --> 00:05:02,520
And the reason is the saw come on when you tell it to sort numerically with the option.

90
00:05:02,650 --> 00:05:07,380
That's a completely different thing to sorting with human readable data.

91
00:05:07,480 --> 00:05:07,990
OK.

92
00:05:07,990 --> 00:05:13,420
So to make it actually sort with human readable data you need to give it the option you said and you

93
00:05:13,420 --> 00:05:16,290
give it the option and you can't have both at the same time.

94
00:05:16,400 --> 00:05:21,890
OK so finally the screen and instead of having the option we now have the page option and we press enter.

95
00:05:22,000 --> 00:05:27,370
Now you can see that it's working and we're getting the largest sizes of the top and the smallest at

96
00:05:27,370 --> 00:05:34,340
the bottom while still getting the data in human readable format so we get the best of both worlds really.

97
00:05:34,470 --> 00:05:39,930
So remember if you want to sort by human readable data you need to give the sort command the hate option

98
00:05:40,720 --> 00:05:44,910
in its key def or just in general if you've only got one column to deal with.

99
00:05:44,940 --> 00:05:46,480
But here we had to add a key there.

100
00:05:46,490 --> 00:05:48,600
So we type the option there.

101
00:05:48,630 --> 00:05:50,640
Now you can also sort by month.

102
00:05:50,670 --> 00:05:57,140
So let's see how we might sort by this column here which is all about you know the date and the the

103
00:05:57,270 --> 00:05:59,010
file was last edited.

104
00:05:59,010 --> 00:06:00,890
So let's clear the screen.

105
00:06:01,140 --> 00:06:01,700
Let's take a look.

106
00:06:01,710 --> 00:06:07,950
So we're saying print out a list for us in long form format with human readable file sizes.

107
00:06:08,100 --> 00:06:15,630
Everything in the ETSI folder was just the top 20 lines and sort for us by the Fifth Column human readable

108
00:06:15,690 --> 00:06:16,440
reversible.

109
00:06:16,550 --> 00:06:17,510
I got it reversed.

110
00:06:17,640 --> 00:06:24,120
Well actually the date is the column after this one so we need to have instead of the fifth column we

111
00:06:24,120 --> 00:06:25,850
want the sixth column.

112
00:06:25,980 --> 00:06:31,350
So we're going to do it in our code if we're going to change the 5 to 6 and instead of human readable

113
00:06:31,350 --> 00:06:36,920
which is going to put a capital M K that this is going to allow us to sort by month.

114
00:06:37,020 --> 00:06:42,180
And if I press Enter now you can see that yes we have indeed sorted by month and we got January at the

115
00:06:42,180 --> 00:06:49,410
top and we've got then may August and then October coming all the way down the bottom so that's really

116
00:06:49,410 --> 00:06:50,800
really cool right.

117
00:06:50,820 --> 00:06:55,890
You can also as well combine this with ops you can combine it with reversible by putting an R in there.

118
00:06:55,980 --> 00:07:01,830
And now we'll find out if I clear the screen and again you see that October is at the top and now January

119
00:07:01,980 --> 00:07:03,300
is at the bottom.

120
00:07:03,300 --> 00:07:04,210
So.

121
00:07:04,660 --> 00:07:05,380
So there you go.

122
00:07:05,410 --> 00:07:10,890
Like once you understand these several different options it's really not that much more difficult to

123
00:07:10,920 --> 00:07:16,440
sort by certain columns all you've got to do is sort it's just in the kida tell it which column that

124
00:07:16,440 --> 00:07:17,050
you want.

125
00:07:17,040 --> 00:07:18,590
Now here's a challenge for you.

126
00:07:18,720 --> 00:07:22,360
I want to see whether you can tell me how you might sort by this column.

127
00:07:22,380 --> 00:07:26,670
So that's the you know the smallest numbers come first.

128
00:07:26,670 --> 00:07:26,900
OK.

129
00:07:26,910 --> 00:07:30,580
So how would you sort by this column which is Yoshino has these numbers here.

130
00:07:30,720 --> 00:07:33,940
How would you sort by that column so that the smallest number was were first go ahead.

131
00:07:33,940 --> 00:07:37,460
Pause the video videos now and then come back to see how you did.

132
00:07:43,460 --> 00:07:43,930
How did you get on.

133
00:07:43,930 --> 00:07:44,830
Did you manage it.

134
00:07:45,160 --> 00:07:50,760
Well if he did well done really really quick learning his highway would have gone about doing it at

135
00:07:50,770 --> 00:07:51,300
that time.

136
00:07:51,310 --> 00:07:54,040
So what I do is we keep everything the same.

137
00:07:54,130 --> 00:08:01,770
LS El-Hage with the ATC taking out the top 20 lines and now the only difference is Akki death.

138
00:08:01,780 --> 00:08:02,190
OK.

139
00:08:02,290 --> 00:08:06,460
So the first question would be the k option 2 the sort command What's the first question is what's the

140
00:08:06,460 --> 00:08:08,230
column number where the code number.

141
00:08:08,350 --> 00:08:09,250
This is the first column.

142
00:08:09,280 --> 00:08:10,930
This is the second column right.

143
00:08:10,930 --> 00:08:15,180
So let's put two and we want to sort this numerically.

144
00:08:15,280 --> 00:08:15,710
Right.

145
00:08:15,940 --> 00:08:21,610
So we're going sort of numerically now by default the sort command was saut smallest first right.

146
00:08:21,610 --> 00:08:23,350
So that means we don't have to reverse anything.

147
00:08:23,350 --> 00:08:29,540
It will start with the smallest number first by default if I clear the screen and try that.

148
00:08:29,590 --> 00:08:34,420
Now we see that it has been sorted by this column with the smallest numbers coming first.

149
00:08:34,420 --> 00:08:38,800
If we wanted to reverse that we just give it the an option and it would reverse that.

150
00:08:38,800 --> 00:08:43,220
So now you're getting the eights at the top and the and the.

151
00:08:43,310 --> 00:08:46,570
And then the smallest numbers the ones down the bottom.

152
00:08:46,570 --> 00:08:49,390
So there's loads of different ways that you can you can do this.

153
00:08:49,450 --> 00:08:50,140
But there you are.

154
00:08:50,200 --> 00:08:58,510
That's that's how you would use the sort command in order to sort data in columns and in as usual one

155
00:08:58,510 --> 00:09:02,270
thing that I should note is here we're having an R.

156
00:09:02,350 --> 00:09:07,420
It doesn't matter if I wrote that or in and it doesn't matter at all like what order you write stuff

157
00:09:07,420 --> 00:09:08,590
in these key definitions.

158
00:09:08,590 --> 00:09:14,140
Just think of them as normal options that you just put right there in the key definition so order doesn't

159
00:09:14,140 --> 00:09:14,780
matter.

160
00:09:15,960 --> 00:09:21,600
So we've covered a whole lot of stuff in the last two videos about sorting data and in this video we

161
00:09:21,600 --> 00:09:26,660
took a look at how you would saw data that is in a table format using the command line.

162
00:09:26,670 --> 00:09:30,600
And so the key to this was to use the sort command with the k option.

163
00:09:30,600 --> 00:09:35,880
Now you need to give the option something called a key def and a key that follows like this kind of

164
00:09:35,880 --> 00:09:36,650
structure.

165
00:09:36,660 --> 00:09:41,340
So first you'll give it a number and that number is the column that you'll sort by.

166
00:09:41,340 --> 00:09:46,430
So for example we have the number three here and that means sort using column 3.

167
00:09:46,470 --> 00:09:51,090
Then after that you can give it any other options that you want like you've seen in the last video for

168
00:09:51,090 --> 00:09:56,240
example you could give it the option to sort numerically and the option to sort in a reverse manner.

169
00:09:56,250 --> 00:10:02,370
So largest to smallest instead of smallest to largest and so human readable data you'd use the hate

170
00:10:02,430 --> 00:10:04,420
option not the an option.

171
00:10:04,410 --> 00:10:07,360
And those are incompatible you can't use both at the same time.

172
00:10:07,410 --> 00:10:12,880
So if you've got human readable data then use the hate option instead of the an option.

173
00:10:13,110 --> 00:10:18,390
Like you saw with the ls command that we used in this video and you can also sort using months using

174
00:10:18,390 --> 00:10:23,430
the capital M option and because the Sort commands sort smallest to largest You will find that January

175
00:10:23,640 --> 00:10:26,160
comes first and then December comes last.

176
00:10:26,160 --> 00:10:31,650
But of course you can reverse that using the option as well and the order of options in the key def

177
00:10:31,680 --> 00:10:32,360
don't matter.

178
00:10:32,370 --> 00:10:35,490
As usual just like you were entering them normally on the command line it doesn't matter if you put

179
00:10:35,790 --> 00:10:40,800
in and then or instead of R and then and it doesn't matter the order but just make sure that you don't

180
00:10:40,800 --> 00:10:45,070
have incompatible options such as the numerical sort and the human readable sort.

181
00:10:45,090 --> 00:10:47,560
At the same time because that won't work very well.

182
00:10:47,700 --> 00:10:54,480
So you now know how to sort data using tabular sort tabular data using the command line and now you

183
00:10:54,480 --> 00:10:58,150
should be really the master of sorting data using the command line.

184
00:10:58,150 --> 00:10:59,310
So Welden you.

185
00:10:59,520 --> 00:11:03,930
So in the next video what we're going to do is we're going to take a look at an incredibly versatile

186
00:11:03,930 --> 00:11:05,820
command called the grep command.

187
00:11:05,910 --> 00:11:09,780
Now because one thing that is super useful when working with the command line is being able to search

188
00:11:09,810 --> 00:11:12,890
through data to find what we are looking for.

189
00:11:12,960 --> 00:11:16,980
OK and pick out just the bits that we're interested in the grep command has got to be one of the most

190
00:11:16,980 --> 00:11:22,290
commonly used commands of all time and it's going to be such an awesome addition to your Linux toolkit.

191
00:11:22,290 --> 00:11:27,300
You've probably already come across in some form or some form or another if you've ever done some you

192
00:11:27,300 --> 00:11:31,740
know searching around on the internet for anything to do with Linux you probably come across the grep

193
00:11:31,740 --> 00:11:32,250
command.

194
00:11:32,340 --> 00:11:35,430
So I can't really wait to show you this and show you how to use it properly.

195
00:11:35,470 --> 00:11:38,280
So if all that good stuff I'll see you in the next video.
