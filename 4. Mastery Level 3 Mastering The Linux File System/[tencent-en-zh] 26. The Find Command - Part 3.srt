1
00:00:00,420 --> 00:00:01,740
你好，你们这些漂亮的人。
Hello you beautiful people.

2
00:00:01,740 --> 00:00:02,550
欢迎回来。
And welcome back.

3
00:00:02,550 --> 00:00:07,800
我们将继续讨论本视频中的find命令，首先显示
We're going to be continuing on our discussion of the find command in this video by starting off showing

4
00:00:07,800 --> 00:00:10,780
教你如何按名字搜索东西。
you how to search for things by name.

5
00:00:10,890 --> 00:00:14,950
假设我们要在这里找到这个名为5.60美元的文件。
So let's say we want to find this file here called $5.60.

6
00:00:15,120 --> 00:00:17,140
我们回到了主文件夹。
And we're back in our home folder.

7
00:00:17,160 --> 00:00:21,840
好的，我们不再在我们的Documents文件夹中，我们只在我们的主文件夹中，我们知道这个文件
OK we're not in our documents folder anymore we're just in our home folder and we know that this file

8
00:00:21,850 --> 00:00:27,430
您已经看到，他在我们的主目录中的某个位置，位于文件系统中此点以下的某个位置
you've got here he is somewhere in our home directory somewhere below this point in the file system

9
00:00:27,660 --> 00:00:32,030
但是我们不能确切地确定在哪里，我们将使用find命令来为我们找到它。
but we're not exactly sure where and we're going to use the find command to find it for us.

10
00:00:32,100 --> 00:00:32,450
好的。
OK.

11
00:00:32,610 --> 00:00:35,670
因此，如果我们清除屏幕，假设我们是否可以使用find命令。
So if we clear the screen let's say if we can the find command.

12
00:00:35,670 --> 00:00:39,780
顺便说一句，我们将从文件系统中的这一点开始，这只是个人问题
We're going to start from this point in the file system by the way this is just a matter of personal

13
00:00:39,780 --> 00:00:41,470
更喜欢实际有圆点的地方。
preference actually having the dot.

14
00:00:41,490 --> 00:00:42,330
你不需要它。
You don't need it.

15
00:00:42,330 --> 00:00:45,020
但我喜欢把它放在那里，只是为了让它更完整一点。
But I like to put it there just to make it a bit more complete.

16
00:00:45,090 --> 00:00:45,530
好的。
OK.

17
00:00:45,600 --> 00:00:50,120
我们在这里找到了从这个位置开始的文件目录，我们想要按名称进行搜索。
So there we are find was starting in this position the file directory and we want to search by name.

18
00:00:50,160 --> 00:00:56,430
所以我们再给它一个名字选项，只用一个破折号，然后用语音符号，所以用双引号括起来
So we give it the name option again just with one dash and then in speech marks so in double quotes

19
00:00:56,700 --> 00:01:01,710
我们想说的是，我们要把我们要寻找的模式，我们要把5.6放在。
we want to say we were going to put the pattern that we're searching for we're going to put 5.6.

20
00:01:01,910 --> 00:01:07,230
而且它确实需要用引号括起来，否则有时会出现find命令，因此请确保将
And it does need to be in quotes otherwise the find command plays up sometimes so make sure you put

21
00:01:07,240 --> 00:01:10,780
在这双引号中的讲话符号中。
in speech marks in these double quotes.

22
00:01:10,950 --> 00:01:13,310
你知道那会好得多。
And you know that that will be that will be much better.

23
00:01:13,400 --> 00:01:13,810
好的。
OK.

24
00:01:13,950 --> 00:01:20,820
因此，如果我们这样做，然后按Enter键，我们会看到命令确实找到了5.60美元。
So if we do if we do that and press ENTER we see that the command has indeed found for the $5.60.

25
00:01:20,910 --> 00:01:26,880
它为我们提供了从当前工作目录开始的通向它的所有路径。
And it's given us the path all the way to it starting at the current working directory.

26
00:01:26,880 --> 00:01:31,350
好的，如果我们想定义3.6t，也可以。
OK so what if we want to define 3.6 t that will work as well.

27
00:01:31,590 --> 00:01:33,720
找到一条通向3到60的路径也是如此。
So is find a path to 3 up to 60.

28
00:01:33,750 --> 00:01:36,130
您可以在这里构建正则表达式。
You can build regular expressions in here.

29
00:01:36,150 --> 00:01:43,710
如果我放置一个存储区，它将在文件系统中找到从这一点开始的每个点文本文件，所以我们可以看到，我们已经
If I put a store it will find every dot text file from this point in the file system so we see we've

30
00:01:43,710 --> 00:01:48,130
我们有一首音乐被罚了，因为我忘了我早些时候创作的那首歌
got one music we've got fined me for that actually which I forgot I'd created earlier in the in the

31
00:01:48,950 --> 00:01:50,170
在课程中。
in the course.

32
00:01:50,280 --> 00:01:52,380
我们在一些隐藏的文件夹里有一些。
We've got some in some hidden folders.

33
00:01:52,380 --> 00:01:54,570
我们这里到处都有。
We have them all over the place.

34
00:01:54,570 --> 00:01:57,690
实际上，我们还可以将搜索的深度限制在。
We can actually also limit the depth that we search to.

35
00:01:57,690 --> 00:02:02,280
所以如果我们达到最大深度，让我们说记住，我们将把最大深度选项
So if we go to a maximum depth of let's say to remembering that we're going to put the max depth option

36
00:02:02,610 --> 00:02:03,840
作为第一个选择。
as the first option.

37
00:02:03,930 --> 00:02:04,420
好的。
OK.

38
00:02:04,590 --> 00:02:06,450
否则我们会得到很大的警告，不是吗？
Otherwise we get a big warning don't we.

39
00:02:06,450 --> 00:02:12,060
因此，如果我使用最大深度来命名任何以DirectX结尾的名称，那么DirectX团队将看到我们找到了所有文件
So if I do max depth to name any name that ends in directx team will see that we found all the files

40
00:02:12,090 --> 00:02:16,650
你知道，实际上有两个，但只会深入到一些非常非常酷的地方，对吧。
and you know two actually but only going to depths in some really really cool right.

41
00:02:16,650 --> 00:02:20,180
你可以像这样按名字搜索，你也可以有。
You can search by name like that and you can also have.

42
00:02:20,940 --> 00:02:23,640
你也可以用通配符，这样我就可以归档了。
You can also have wild cards so I could do file.

43
00:02:23,660 --> 00:02:27,060
然后是一个取XTi的数字，什么也得不到。
And then a number that takes XTi and nothing comes up.

44
00:02:27,070 --> 00:02:28,380
如果我说了呢。
What if I did.

45
00:02:29,070 --> 00:02:32,900
如果我做了问号之类的事呢。
What if I did something like questionmark.

46
00:02:33,000 --> 00:02:36,270
什么都不会发生，但是如果我深入到一个很大的深度，比如说10。
Nothing comes up but if I go to a big depth of like let's say 10.

47
00:02:36,480 --> 00:02:41,620
现在我们看到我们只得到4，需要60，5.6，3.6和2.6。
Now we see that we just get four it takes 60 5.6 a 3.6 and 2.6.

48
00:02:41,760 --> 00:02:47,670
但是这些找到我，一个找到我，找到我，四个等等都被忽略了，因为它们与这个世界不匹配。
But these Find me one find me to find me four etc. are ignored because they don't match this world.

49
00:02:47,730 --> 00:02:49,110
这个正则表达式。
This regular expression.

50
00:02:49,230 --> 00:02:54,870
这是一种非常强大的能力，只需建立在您对正则表达式和
So that is a really powerful ability just by building upon your knowledge of regular expressions and

51
00:02:54,870 --> 00:02:56,500
外卡。
wild cards.

52
00:02:56,670 --> 00:02:59,980
您真的可以根据需要定制find命令。
You can really tailor the find command to your needs.

53
00:03:00,090 --> 00:03:05,520
这里我要注意的一件事是，您不能在名称内部和内部进行大括号扩展
And the one thing I should note here is that you can't do brace expansion inside and inside the name

54
00:03:05,640 --> 00:03:07,810
命令，因为这是需要牢记的事情。
command because such is something to bear in mind.

55
00:03:08,070 --> 00:03:08,780
好的。
OK.

56
00:03:09,010 --> 00:03:10,800
至少在双引号内。
At least at least inside double quotes.

57
00:03:10,860 --> 00:03:12,330
我们就把它留在那里吧。
Let's just leave it there.

58
00:03:12,840 --> 00:03:13,330
好的。
OK.

59
00:03:13,410 --> 00:03:19,850
另一件事是，你可以用不区分大小写的方式，通过在名字上搜索点来进行搜索。
So the other thing is that you can search in a case insensitive way by searching dot on name.

60
00:03:19,860 --> 00:03:27,030
因此，如果我在这里将此更改为全部大写的点，我相信屏幕采用的是大写字母
So if I change this here to dot THC all in uppercase I believe the screen takes an upper case that will

61
00:03:27,570 --> 00:03:28,860
现在比对一下。
now match up.

62
00:03:28,860 --> 00:03:29,930
我做错了那件事。
I did that wrong way round.

63
00:03:29,940 --> 00:03:30,760
我真的很喜欢这个。
I do like this.

64
00:03:30,900 --> 00:03:31,920
只要搜索一下名字就行了。
Just search name.

65
00:03:31,920 --> 00:03:32,490
好的。
OK.

66
00:03:32,760 --> 00:03:36,410
现在您将看不到任何匹配，因为现在它是区分大小写的搜索。
Now you'll see nothing matches because now it's search in case sensitive.

67
00:03:36,480 --> 00:03:42,690
但是如果我把它改成name，那么搜索这个名字是不是不区分大小写呢？
But if I change it to name so is case insensitive searching for the name so uppercase and lowercase

68
00:03:42,690 --> 00:03:49,560
现在不要紧，它会匹配，因为它不在乎这个T，T是大写的，所以这很好
don't matter now it will match because it doesn't care that this T T is in uppercase So that's good

69
00:03:49,560 --> 00:03:52,280
如果您不确定为什么要在文件名中放一个大小写。
if you're not sure why you put up a case in the file name.

70
00:03:52,350 --> 00:03:56,790
使用名称进行搜索是很好的，这样可以使搜索变得更通用一些。
It's good to search with a name to make that search just a bit more general.

71
00:03:56,820 --> 00:04:02,570
现在，使用find命令搜索文件的另一种有趣方式是按文件大小。
Now another interesting way to search for files with the find command is by file size.

72
00:04:02,580 --> 00:04:09,000
假设我们要在整个文件系统中搜索每个大于100的文件
So let's say that we wanted to search the entire file system for every file that is larger than 100

73
00:04:09,180 --> 00:04:09,940
千字节。
kilobytes.

74
00:04:09,980 --> 00:04:11,490
好的，让我们清理一下屏幕。
OK so let's clear the screen.

75
00:04:11,490 --> 00:04:12,420
我们怎么才能做到这一点。
How would we do that.

76
00:04:12,600 --> 00:04:18,570
我们要做的是尝试找到代码，然后当然需要给它一个开始搜索的地方
Well what we do is we try to find code and then we need to give it of course a place to start searching

77
00:04:18,570 --> 00:04:18,940
从…。
from.

78
00:04:18,960 --> 00:04:23,940
因此，让我们从文件系统的最底层开始，因为我们希望找到系统上的每个文件
So let's start from the very base of the file system because we want to find every file on the system

79
00:04:23,940 --> 00:04:30,190
因此，让我们从系统的最底层开始，我们要搜索大于100千字节的文件。
so let's start at the very base of the system we want to search for files that are larger than 100 kilobytes.

80
00:04:30,210 --> 00:04:33,960
假设我们需要文件，那么让我们指定一种类型的f。
So let's say that we want files so let's specify a type of f..

81
00:04:33,950 --> 00:04:36,250
因为我们只是在寻找文件，而不是文件夹。
So because we're just looking for files not folders.

82
00:04:36,460 --> 00:04:38,920
我的意思是多大，所以我们要给它一个尺码的选择。
I mean what size so we're going to give it a size option.

83
00:04:38,940 --> 00:04:40,170
又一次冲刺。
Again one dash.

84
00:04:40,380 --> 00:04:44,130
现在你可以这样说，大于100千字节。
And now this is how you'd say greater than 100 kilobytes.

85
00:04:44,130 --> 00:04:49,110
好的，你可以看到加号的意思更大，如果它小于减号，那就远远小于
OK so you see the plus meaning greater if it was less than you'd have minus so that's much less than

86
00:04:49,110 --> 00:04:49,820
100千字节。
100 kilobytes.

87
00:04:49,830 --> 00:04:55,650
但是我们想要的不只是千字节的小写K，而是比100更多。
But we want more and so more than 100 than a lowercase K for kilobytes.

88
00:04:55,650 --> 00:05:02,240
因此，如果我按Enter键，您将看到我们在查找所有
So if I press Enter you'll see that we get a whole bunch of it as we look for all the files that are

89
00:05:02,240 --> 00:05:06,120
大于100千字节，从我们的文件系统的最底层开始。
bigger than 100 kilobytes starting at the very base of our file system.

90
00:05:06,290 --> 00:05:11,210
但是，如果你快速浏览一下，如果我向上滚动到顶部，你可能会注意到一件事，那就是我们有
But one thing you might have noticed if you had a quick eye if I scroll up to the top is that we got

91
00:05:11,210 --> 00:05:13,920
很多权限被拒绝的错误。
a lot of permission denied errors.

92
00:05:14,180 --> 00:05:17,190
如果我可以通过滚动到后面的方式来展示给你们看，我们就可以开始了。
If I can show you by scrolling all the way up back up there we go.

93
00:05:17,270 --> 00:05:20,580
你可以看到，我们有很多权限被拒绝，权限被拒绝，权限被拒绝。
You can see that we've got a lot of permission denied permission denied permission denied.

94
00:05:20,600 --> 00:05:23,970
原因是我们从文件系统的基础开始。
And the reason is that's because we started at the base of our file system.

95
00:05:24,170 --> 00:05:29,030
请记住，FINE命令会尝试进入每个文件夹，但它不能，因为它没有
And remember the fine command would try to enter every folder but it couldn't because it didn't have

96
00:05:29,030 --> 00:05:33,680
输入基本目录中仅可访问的一些文件夹所需的权限
the required privileges to enter some of the folders in our base directory that are only accessible

97
00:05:33,920 --> 00:05:37,110
到root用户，再到超级用户，再到管理员帐户。
to the root user to the super user to the Administrator account.

98
00:05:37,250 --> 00:05:43,790
因此，要解决这个问题，我们只需在命令转到sudo时在命令前面加上伪命令，然后执行
So to fix that we just prefix the command with the pseudo commands when it goes sudo and then do the

99
00:05:43,790 --> 00:05:46,360
睡觉的话，我们的错误就会少得多。
rest of it and we'll get a whole lot less errors.

100
00:05:46,370 --> 00:05:49,730
好的，因为我们之前不会有那些入口区域。
OK because we're not going to have those access areas before.

101
00:05:49,910 --> 00:05:56,510
现在，我们可以通过将整个内容输入到单词中来计算我们实际从中得到的结果
Now we can count the results that we actually got out of this by piping the entire thing into the word

102
00:05:56,510 --> 00:05:58,190
夏令营带着这个选项来吧。
camp come on with the option.

103
00:05:58,280 --> 00:06:02,870
这样做的目的是计算您给出的输出中的行数。
And what this will do is it will count the amount of lines in the output that you give it.

104
00:06:02,900 --> 00:06:06,590
所以如果你注意到了，当我们运行这段代码时，你每行都会得到一个结果。
So if you notice when we run this you get one result per line.

105
00:06:06,640 --> 00:06:07,080
好的。
OK.

106
00:06:07,190 --> 00:06:11,390
所以如果我们把所有这些都输入单词Can‘t Out，并给它一个选项，这将会计算出有多少
So if we pipe all of that into the word can't come out and give it the option this will count how many

107
00:06:11,390 --> 00:06:12,050
台词。
lines.

108
00:06:12,110 --> 00:06:18,080
如果我们这样做，我们会得到3,144个结果，这是一大堆
And if we do that we get three thousand one hundred and forty four results which is a whole bunch of

109
00:06:18,140 --> 00:06:19,180
结果。
results.

110
00:06:19,190 --> 00:06:23,600
有趣的是，你们可以一起进行不同规模的训练。
Now one thing that's interesting is you can train together and different sizes.

111
00:06:23,600 --> 00:06:26,290
所以这里我们说它需要大于100千字节。
So here we're saying it needs to be greater than 100 kilobytes.

112
00:06:26,420 --> 00:06:29,920
这就是我们如何说它必须小于5兆字节。
And this is how we'd say it has to be less than 5 megabytes.

113
00:06:29,930 --> 00:06:30,290
好的。
OK.

114
00:06:30,440 --> 00:06:34,790
这就是我们要做的，我们把我们所说的所有这些不同的需求链接在一起
So here's what we're doing is we're chaining together all these different requirements we're saying

115
00:06:35,150 --> 00:06:42,890
它必须是文件，并且文件大小必须大于100KB，并且文件大小必须是
it has to be a file and the file size has to be bigger than 100 kilobytes and the file size has to be

116
00:06:42,890 --> 00:06:44,750
少于5兆字节。
less than 5 megabytes.

117
00:06:44,750 --> 00:06:49,100
如果我们数一数它们有多少，我们会发现我们得到的要少得多。
And if we count how many of them there are we see that we get quite a few less.

118
00:06:49,100 --> 00:06:57,710
现在我们将获得3000和30个文件，而不是3000 144个，因此大约有114个文件不是
Now we're going to get 3000 and 30 files instead of 3000 144 So there's about 114 files that aren't

119
00:06:57,710 --> 00:07:02,690
因为它们大于5兆字节，所以不再显示了。
being shown anymore because they they were bigger than 5 megabytes.

120
00:07:02,690 --> 00:07:08,360
如果我点击屏幕，我想在这里强调的一件事是我们链接的方式
So if I click the screen one thing that I really want to highlight here is the way that we're chaining

121
00:07:08,360 --> 00:07:10,040
汇聚了不同的需求。
together different requirements.

122
00:07:10,040 --> 00:07:10,410
好的。
OK.

123
00:07:10,550 --> 00:07:18,590
在这里，我们说它必须是一个文件，大小必须大于100千字节，并且大小
So here we're saying it has to be a file and the size has to be greater than 100 kilobytes and the size

124
00:07:18,590 --> 00:07:21,100
必须小于5兆字节。
has to be less than 5 megabytes.

125
00:07:21,170 --> 00:07:24,640
以便将其包含在我们的要求中。
In order for it to be contained in our requirements.

126
00:07:24,710 --> 00:07:31,670
好的，那么我们怎么说呢？好的，我想找到所有小于100KB的文件
OK so how would we say something like OK I want to find all the files that are less than 100 kilobytes

127
00:07:32,120 --> 00:07:34,550
或大于5兆字节。
or bigger than 5 megabytes.

128
00:07:34,700 --> 00:07:35,790
好的。
OK.

129
00:07:35,900 --> 00:07:37,430
我们这样做的方式。
Well the way that we do that.

130
00:07:37,490 --> 00:07:41,750
我的意思是，首先，如果我们想说小于100千字节，我们就这么做，如果我们说大于100千字节
I mean first of all if we wanted to say less than 100 kilobytes we do that and if one say greater than

131
00:07:41,750 --> 00:07:44,060
5兆字节，我们需要将其更改为加号。
5 megabytes we need to change that to a plus.

132
00:07:44,150 --> 00:07:45,800
但此时此刻。
But at the minute here.

133
00:07:46,170 --> 00:07:48,210
让我们看看我们得到了多少结果。
Let's see how many results we get.

134
00:07:48,320 --> 00:07:54,440
我们将得到零结果，因为文件不可能小于100千字节
We're going to get zero results because it's impossible for a file to be less than 100 kilobytes and

135
00:07:54,620 --> 00:07:56,220
大于5兆字节。
greater than 5 megabytes.

136
00:07:56,310 --> 00:08:00,160
你不能在小于100G的同时超过5兆字节。
You can't be bigger than five megabytes at the same time that you're less than 100 gigabytes.

137
00:08:00,160 --> 00:08:01,240
那是不可能的。
That's not possible.

138
00:08:01,250 --> 00:08:07,400
我们想说的是，它需要小于100千字节或大于5兆字节，
What we want to say is it needs to be less than a hundred kilobytes or greater than five megabytes and

139
00:08:07,460 --> 00:08:11,940
它需要少于100个好词，或者大于100个伟大的5兆字节。
it needs to be less than a hundred good words or greater than 100 great and five megabytes.

140
00:08:11,990 --> 00:08:17,990
如果您在两个要求之间键入破折号0，则可以这样做。
The way that you do that if you type a dash 0 in between the two requirements.

141
00:08:17,990 --> 00:08:23,990
我们要说的是，它将是一个文件，其大小需要小于100千字节或
So what we're saying is it's going to be a file and it's size needs to be less than 100 kilobytes or

142
00:08:24,050 --> 00:08:24,970
比五个还多。
greater than five.

143
00:08:25,010 --> 00:08:29,030
因此，如果我们这样做，你可以看到，我们现在已经得到了一大堆结果。
So if we do that you can see now that we got a whole bunch of results.

144
00:08:29,120 --> 00:08:33,330
19万9112个结果。
One hundred ninety nine thousand one hundred and twelve results.

145
00:08:33,500 --> 00:08:35,250
你可以用这个疯狂一下。
You can go quite wild with this.

146
00:08:35,250 --> 00:08:37,890
这是AND和OR，但我想这样就可以了。
This anding and oring but I think that will do.

147
00:08:38,300 --> 00:08:39,540
我想现在就够了。
I think that will do for now.

148
00:08:39,560 --> 00:08:42,960
您也可以不执行并加载所有不同的逻辑操作。
You can also do not and loaded all the different logical operations.

149
00:08:42,960 --> 00:08:48,500
我的意思是，如果你熟悉布尔逻辑，但如果你想找到更多，我会让你自己决定
I mean if you're familiar with Boolean logic but I'll leave that up to you if you want to find more

150
00:08:48,920 --> 00:08:52,430
通过查看手册页，通过视频显示会有点混乱。
by looking at the man pages it would be a bit of a mess to show by video.

151
00:08:52,430 --> 00:08:54,050
所以我们在这段视频中已经讲了很多。
So we've covered quite a lot in this video.

152
00:08:54,050 --> 00:08:59,960
我们已经了解了如何使用find命令的name选项按名称搜索内容。
We've seen how to use the name option for the find command to search for things by name.

153
00:08:59,960 --> 00:09:06,250
所以您可以使用Dasch name，然后用双引号给它一个您想要的正则表达式
So you'd use Dasch name and then gave it in double quotes a certain regular expression that you wanted

154
00:09:06,260 --> 00:09:07,920
要匹配的文件名。
file names to match.

155
00:09:08,000 --> 00:09:13,010
因此，我可以执行任何以点文本结尾的操作，例如使用星形通配符，这将为我们提供
So I could do anything ending in Dot text for example using the Star wildcard and that would give us

156
00:09:13,340 --> 00:09:16,100
以点文本结尾的所有文件。
all the files that ended in Dot text.

157
00:09:16,220 --> 00:09:19,110
您可以使搜索不区分大小写。
And you can make the search case insensitive.

158
00:09:19,190 --> 00:09:26,170
因此，通过使用名称选项，大写和小写都无关紧要，它们就在那里
So the uppercase and lowercase don't matter by using the by using the name options and they're there

159
00:09:26,180 --> 00:09:32,140
即使我们说的是Dotty Xti大写，这也无关紧要，因为我们使用的是name选项。
even though we have said Dotty XTi uppercase it doesn't matter because we're using the name option.

160
00:09:32,180 --> 00:09:35,600
因此，我们首先要关注的是如何按名称查找文件。
So the first thing we look to how to find files by name.

161
00:09:35,630 --> 00:09:41,550
然后，我们了解了如何根据文件大小查找文件，您可以看到您使用的是锯子
Then we took a look at how you could find files by their file size and you saw that you use the saw

162
00:09:41,690 --> 00:09:48,530
选项，然后给它一个特定的文件大小，加号表示减号上方的平均值。
option and then you give it a certain file size and the plus means above the minus means.

163
00:09:48,530 --> 00:09:54,150
在下面，你可以准确地给出，比如说，500兆字节，也就是500兆字节。
Below you can actually give it just exactly for example 500 megabytes that's exactly 500 megabytes.

164
00:09:54,170 --> 00:09:55,680
这超过了500兆字节。
This is above 500 megabytes.

165
00:09:55,700 --> 00:09:58,420
这是小于500兆字节的大写G。
This is below 500 megabytes a capital G.

166
00:09:58,460 --> 00:10:00,060
顺便说一下，它是千兆字节的。
By the way is gigabyte.

167
00:10:00,330 --> 00:10:04,530
您可以在find命令的手册页中找到更多信息。
And you can find more on that in the man page for the find command.

168
00:10:04,660 --> 00:10:08,640
但在下一个视频中，我们要做的是跳到一些非常令人兴奋的事情上。
But in the next video we're going to be doing is we're going be jumping on some very exciting stuff.

169
00:10:08,670 --> 00:10:12,930
我们将向您展示的是如何使用find命令不仅为您提供完整的
And what we're going to be showing you is how you can use the find command to not only give you a whole

170
00:10:12,930 --> 00:10:19,620
一串结果，但在同一命令中还会在每个命令上执行另一个命令，甚至另一个流水线
bunch of results but in the same command also execute another command or even another pipeline on every

171
00:10:19,620 --> 00:10:21,530
这些结果中只有一个。
single one of those results.

172
00:10:21,530 --> 00:10:27,800
这是一台涡轮增压器，适用于您在Linux命令行上的工作，我希望您会非常非常兴奋
This is this is a turbocharger for your work on the Linux command line and I hope you're very very excited

173
00:10:27,810 --> 00:10:32,430
所以让我们把这里的视频剪下来，跳到下一个，在那里我们将学习如何取得平衡
so let's cut the video here and jump over into the next one where we're going to learn how to gain even

174
00:10:32,430 --> 00:10:33,570
更多的超级大国。
more superpower's.

