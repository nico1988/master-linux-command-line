1
00:00:00,240 --> 00:00:05,100
大家好，漂亮的人们，欢迎收看这段视频，我们将在这里开始我们的讨论
Hello you beautiful people I'm welcome to this video where we're going to be kickstarting our discussion

2
00:00:05,340 --> 00:00:09,450
了解如何使用命令行删除文件和目录。
of how to delete files and directories using the command line.

3
00:00:09,450 --> 00:00:14,310
在这段视频中，您将学习如何使用R.m命令删除文件，您还将
So in this video you're going to learn how to use the r.m command to delete files and you're also going

4
00:00:14,310 --> 00:00:20,130
要了解如何将命令中的r与通配符一起使用以使room命令更加强大，请执行以下操作
to learn how to use the r in command along with wildcards to make the room command even more powerful

5
00:00:20,380 --> 00:00:24,690
在本视频结束时，您将了解如何使用命令行删除文件，然后是下一个视频
by the end of this video you'll know how to delete files using the command line and then the next video

6
00:00:24,690 --> 00:00:27,370
将把我们的讨论转移到目录上。
will move our discussion onto directories.

7
00:00:27,510 --> 00:00:31,400
所以，让我们继续直截了当地谈吧。
So let's go ahead and get right into it.

8
00:00:31,410 --> 00:00:37,950
好的，让我们首先在主目录中创建一个名为Delete Me的文件，这样我们就可以看到
All right so let's kick off by creating a file called Delete me in our home directory so we can see

9
00:00:37,950 --> 00:00:40,620
通过查看shell提示符，我们已经在主目录中。
that we're already in a home directory by looking at the shell prompt.

10
00:00:40,620 --> 00:00:44,760
我们看到Tilda在那里蠕动，这意味着当shell提示时，但为了确认，我们可以
We see the tilda the squiggle up there which means when the shell prompt but to confirm we could just

11
00:00:44,760 --> 00:00:49,950
键入pdb命令print workdirectory，并看到我们确实在自己的主文件夹中。
type the PDB the command print working directory and see that we are indeed in our home folder.

12
00:00:50,070 --> 00:00:52,020
那么让我们创建一个名为Delete Me的文件。
So let's create a file called delete me.

13
00:00:52,050 --> 00:00:58,410
我们将使用touch命令并键入delete me并按Enter，然后如果我们使用ls命令
We're going to use the touch command and type delete me and press enter and then if we use the ls command

14
00:00:58,470 --> 00:01:02,670
我们将看到，我们确实有一个名为delete me的文件，并且已经创建。
we'll see that we do indeed have a file called delete me and been created.

15
00:01:02,670 --> 00:01:07,800
当然，我们可以通过打开图形文件浏览器来确认这一点，我们将看到一个名为DELETE的文件
We can confirm this of course by opening up our graphical file browser and we'll see a file called delete

16
00:01:07,800 --> 00:01:08,090
我。
me.

17
00:01:08,160 --> 00:01:09,740
好的，到目前为止一切都很好。
Ok so so far so good.

18
00:01:09,750 --> 00:01:11,320
清除屏幕。
Clearing the screen.

19
00:01:11,570 --> 00:01:15,480
既然我们已经创建了Delete Me，我们如何才能真正删除它。
Now that we've created delete me how can we actually delete it.

20
00:01:15,540 --> 00:01:16,170
好的。
OK.

21
00:01:16,410 --> 00:01:21,900
实际上，删除或移除该文件的方法是使用一种称为R-M命令的方法。
Well the way to actually delete or remove that file is using something called the R M command.

22
00:01:21,900 --> 00:01:23,560
现在，r.m命令是。
Now the r.m command is.

23
00:01:23,610 --> 00:01:25,520
我将R.M代表移除。
I will r.m stands for remove.

24
00:01:25,710 --> 00:01:31,970
您所要做的就是为r.m命令提供一组指向您实际想要删除的文件的路径
And all you've got to do is give the r.m command a set of paths to files that you actually want to delete

25
00:01:31,980 --> 00:01:34,470
这些可以是绝对路径，也可以是相对路径。
and these could be absolute paths or relative paths.

26
00:01:34,470 --> 00:01:39,890
因此，如果我们打开r.m命令的手册页，它会显示您可以为其提供多个文件。
So if we open up the man page for the r.m command it says that you can give it more than one file.

27
00:01:39,900 --> 00:01:43,770
好的，你看，你可以给它一个文件，然后它后面有三个点。
Ok you see you can give it a file and then it's got three dots after it.

28
00:01:43,770 --> 00:01:51,270
从我们对命令行语法或命令行布局的讨论中我们知道，这三个点
And we know from our discussion of command line syntax or command line layout that these three dots

29
00:01:51,810 --> 00:01:53,460
意思是你可以有不止一个。
mean you can have more than one.

30
00:01:53,460 --> 00:01:58,380
如果您需要复习一下上一节的小抄，它已经提供了所有的信息
And if you need a refresher on that check the cheat sheet in the previous section it's got all the information

31
00:01:58,380 --> 00:01:59,330
在那里等着你。
there for you.

32
00:01:59,340 --> 00:02:05,880
所以让我们继续删除，删除我，这样我就可以了，因为我已经在同一个文件夹中了。
So let's go ahead and remove delete me so I could because I'm already in the same folder.

33
00:02:06,000 --> 00:02:09,560
我可以，你知道，就像这样使用相对路径。
I could just you know use the relative path like that.

34
00:02:09,610 --> 00:02:10,720
R.M.删除我。
R.m delete me.

35
00:02:10,720 --> 00:02:15,880
当我按Enter键时，我们将看到Delete Me确实已被删除。
And when I press Enter we'll see that delete me has indeed been deleted.

36
00:02:16,230 --> 00:02:22,070
我可以，如果我创建了删除我，如果我创建了删除我，这次在我们的Documents文件夹中删除我。
I could if I create delete me if I create delete me in our documents folder this time.

37
00:02:22,230 --> 00:02:22,590
好的。
OK.

38
00:02:22,800 --> 00:02:26,850
因此，如果我查看我们的Documents文件夹，我们会发现在命令中的那一分钟已经创建了Delete Me
So if I look in our documents folder we see delete me has been created at the minute in the command

39
00:02:26,850 --> 00:02:27,180
排队。
line.

40
00:02:27,210 --> 00:02:28,420
我只是在主文件夹里。
I'm just in the home folder.

41
00:02:28,620 --> 00:02:34,270
所以如果我试图做R.M删除我，那是行不通的，因为这里没有删除我这样的东西
So if I tried to do r.m delete me that won't work because there is no such thing as delete me in this

42
00:02:34,410 --> 00:02:35,350
在此目录中。
in this directory.

43
00:02:35,520 --> 00:02:36,410
那就把它删掉吧。
So delete it.

44
00:02:36,450 --> 00:02:38,320
我得做所有RAM文档。
I have to do all RAM documents.

45
00:02:38,340 --> 00:02:43,230
劈开删除我，所以我必须给它相对于我们现在所在位置的路径，也就是主文件夹。
Slash delete me so I have to give it the path relative to where we are now which is the home folder.

46
00:02:43,230 --> 00:02:47,740
所以在这里我在沃达得到删除我的文件后，然后删除我。
So here I am in Voda to get to delete me after documents then delete me.

47
00:02:48,020 --> 00:02:53,050
好的，所以文档只需删除我，我按Enter键，然后它就被删除了。
OK so documents just delete me and I press enter and then it gets deleted.

48
00:02:53,170 --> 00:02:53,680
好的。
OK.

49
00:02:53,790 --> 00:02:54,880
而且你可以有不止一个。
And you can have more than one.

50
00:02:54,900 --> 00:03:00,320
所以如果我继续创建一个名为的文件，比方说，为一个DirectX创建一个文件。
So if I go ahead and create a file called let's say for one directx.

51
00:03:00,540 --> 00:03:01,780
那在我们的主目录里。
That's in our home directory.

52
00:03:01,880 --> 00:03:09,510
我在我们的文档中创建了一个名为Faltu的文件，因此需要接收我们的文档和名为
I create a file called Faltu in our documents so fall to take in our documents and a credit for called

53
00:03:09,960 --> 00:03:12,750
在我们的下载中有三个点的滴答声。
for three dot tickety in our downloads.

54
00:03:12,750 --> 00:03:14,550
就像我说的，我在家里的文件夹里有一个。
Like I say I've got one in the home folder.

55
00:03:14,730 --> 00:03:18,620
一份文档和一份下载中的文档。
One of the documents and one in downloads.

56
00:03:18,680 --> 00:03:24,590
好的，几乎所有这些，我都可以一个接一个地输入，所以我对一个文本做了R.M。
OK so nearly all those I can just enter them one after another so I do r.m for one text.

57
00:03:24,630 --> 00:03:26,710
我不需要因为那件事做任何事。
I don't have to do anything because of that.

58
00:03:26,860 --> 00:03:32,730
这样就可以了，因为我已经在主目录中，与其文档劈开、法尔图和
That will do because I'm already in the home directory the same folder as it documents slash Faltu and

59
00:03:32,790 --> 00:03:35,440
下载劈开文件3。
downloads slash file 3.

60
00:03:35,530 --> 00:03:42,630
如果我或者你看到一份失踪的文件，福尔图已经从文件中消失了，4：03已经消失了。
If I Precentor you see the file one disappeared Faltu has disappeared from documents and 4:03 has disappeared

61
00:03:42,660 --> 00:03:43,470
从下载中下载。
from downloads.

62
00:03:43,560 --> 00:03:48,520
因此，DRM命令是用于文件的非常简单的命令。
So DRM command is a very simple command to use for files.

63
00:03:48,540 --> 00:03:50,810
只要把它想象成触摸命令的对立面就行了。
Just think of it as the opposite of the touch command.

64
00:03:50,820 --> 00:03:55,380
如果你想创建一个文件，你确实接触到了外来的文件，你已经想要删除它了。
If you want to create a file you do touch foreign one you want to delete it already.

65
00:03:55,830 --> 00:03:59,680
R.M远一点，它就会像那样工作。
R.m far one and it will work just like that.

66
00:03:59,690 --> 00:04:05,280
因此，不管我们是否已经了解了如何基本地使用auum命令，让我们将其提升一个档次，并使用它
So whether we've seen how to use the Aurum command in a basic way let's take it up a notch and use it

67
00:04:05,340 --> 00:04:06,750
以及通配符。
along with wildcards.

68
00:04:06,750 --> 00:04:11,200
现在，通配符可以真正提升命令的功能。
Now wildcards can really level up the power that your commands have.

69
00:04:11,190 --> 00:04:14,240
让我们来看看我们是如何使用R M命令来做这件事的。
So let's just see see how we do this using the R M command.

70
00:04:14,350 --> 00:04:15,570
我们来做几个新文件吧。
Let's make a few new files.

71
00:04:15,690 --> 00:04:23,570
让我们创建一个1.60规格的Faltu dot PMG和4：03 dot jp G的文件。
Let's make a file 1.60 spec Faltu dot PMG and 4:03 dot JP G.

72
00:04:23,580 --> 00:04:28,470
因此，当我按Enter键时，您会看到这三个文件都已在我们的主文件夹中创建。
So when I press enter you see that all three of those have been created in our home folder.

73
00:04:28,640 --> 00:04:35,820
好的，现在我们如何删除以datti xti结尾的每一个。
OK now how would we delete every single one of them that ended in Datti XTi.

74
00:04:35,830 --> 00:04:39,860
所以这实际上只是狂热地为达蒂·西蒂的案子做了另一个文件。
So that's actually just fanatic's make another one file for Datti XTi case.

75
00:04:39,870 --> 00:04:45,790
我们到了DirectX Take的末尾，我们有一个以PNB和GBG结尾的。
We've got to the end in directx take and we've got one that ends in PNB and GBG.

76
00:04:45,810 --> 00:04:47,090
我们怎么删除它们呢。
How would we delete them.

77
00:04:47,100 --> 00:04:49,060
他们就是我最终来到这里的人。
They're the ones I ended up here.

78
00:04:49,380 --> 00:04:52,850
嗯，首先我们可以手工做。
Well first of all we could do it manually.

79
00:04:52,860 --> 00:04:57,770
我们可以说我们的M-FILE赢得了60名医生，而对于40名医生来说，这实际上是可行的。
We could say our M-file won doctor 60 and for 40 actually that would work.

80
00:04:57,780 --> 00:04:59,990
但我想要一个比这更聪明的解决方案。
But I want a bit more of a clever solution than that.

81
00:05:00,020 --> 00:05:04,130
我想说删除所有以点T x T结尾的文件。
I want to say delete every file that ends in Dot T x T.

82
00:05:04,610 --> 00:05:11,340
现在我们这样做的方式是给命令一个模式，任何与此模式匹配的都将
Now the way we do that is by giving the command a pattern and anything that matches this pattern will

83
00:05:11,340 --> 00:05:13,930
作为命令行参数添加到它。
be added as a command line argument to it.

84
00:05:14,100 --> 00:05:18,540
所以如果我要用的图案是这颗星Datti XTi。
So if the pattern that I'm going to use is this star Datti XTi.

85
00:05:18,540 --> 00:05:19,450
现在我们来分析一下这个。
Now let's break this down.

86
00:05:19,560 --> 00:05:22,890
好的，那么这颗星有任何意义。
OK so the star means anything.

87
00:05:22,890 --> 00:05:24,030
任何东西都可以去那里。
Anything could go there.

88
00:05:24,030 --> 00:05:25,430
所以这整件事就是我们的模式。
So this whole thing is our pattern.

89
00:05:25,530 --> 00:05:29,890
好的，开始有任何意义，然后是达蒂XTi。
OK the start means anything and then Datti XTi.

90
00:05:29,940 --> 00:05:37,280
因此，这意味着任何与该模式匹配的东西，它都必须做的是，在Datti XTi中，它是正确的。
So what this means is for anything to match that pattern at all it has to do is and in Datti XTi right.

91
00:05:37,290 --> 00:05:42,880
基本上，这是说删除所有以点XTi结尾的内容，然后按Enter键。
So basically what this is saying is remove everything that ends in Dot XTi and we press enter on that.

92
00:05:43,110 --> 00:05:47,660
你看秋天的和Fall For都被删除了，因为它们以点结尾。
You see the fall one and fall for have been deleted because they ended in Dot.

93
00:05:47,670 --> 00:05:48,900
T x T。
T x t.

94
00:05:49,240 --> 00:05:58,830
好的，让我们试着看看能不能用其他力量使这个Make文件再一次达到1.60，
OK so let's let's try and see if we could make some other forces make this make file 1.60 again and

95
00:05:58,830 --> 00:06:00,810
爱上DOT T。
fall for the DOT T.

96
00:06:00,870 --> 00:06:04,460
我们回过头来做这些吧。
Let's make those back then.

97
00:06:04,470 --> 00:06:06,080
那么让我们创建一些文件。
Then let's let's create some of the files.

98
00:06:06,110 --> 00:06:14,370
就是创建一些叫做崇高圆点x，t和圆圈的问题。
Is create some called Sublime Dotti x t and the circlets problem one right and then blam to.

99
00:06:14,490 --> 00:06:19,680
PMG和崇高三大顶级JPT。
PMG and sublime three top JPT.

100
00:06:20,310 --> 00:06:24,690
所以我们有一些以问题开头的，还有一些以Word文件开头的。
So we've got some that start with problem and some that start with the Word file.

101
00:06:24,860 --> 00:06:29,840
好的，我们如何删除那些只以Word文件开头的。
OK how would we delete the ones that just start with the word file.

102
00:06:30,120 --> 00:06:34,030
我们这样做的方式是，我们用r来指挥。
Well the way that we do this is we would use the r in command.

103
00:06:34,050 --> 00:06:37,550
当然，同样，因为我们需要删除，所以我们需要给它另一个Potten。
Again of course because we need to delete then we need to give it another Potten.

104
00:06:37,620 --> 00:06:45,000
因此，让我们考虑一下，我们将如何创建一个与任何内容匹配的模式，只要它以
So let's think how would we create a pattern that would match anything as long as it started with the

105
00:06:45,000 --> 00:06:45,850
Word文件。
word file.

106
00:06:46,940 --> 00:06:52,010
我们可以做到这一点的方法是，我们可以提取单词file，然后加上一个星号，因为这意味着
Well the way we can do that is we can take the word file and then put a star because this means as long

107
00:06:52,010 --> 00:06:55,640
因为它以file开头，然后是后面的任何内容，所以它是匹配的。
as it starts with file and then has anything after it it matches.

108
00:06:55,640 --> 00:06:57,440
所以它所要做的就是从Word文件开始。
So all it has to do is start with the word file.

109
00:06:57,440 --> 00:07:03,260
如果我按Enter键，我们会看到文件1、2、3和4，您知道的关于该文件的文本无关紧要
And if I press Enter we see the file 1 2 3 and 4 that text that you know doesn't matter about the file

110
00:07:03,260 --> 00:07:06,010
扩展名或任何东西，只要它们以文件开头，它们就被删除了。
extension or anything as long as they start with file they've been deleted.

111
00:07:06,010 --> 00:07:10,140
但是所有的沙巴农场都保留在那里。
But all of the Shebaa farms have been kept there.

112
00:07:10,360 --> 00:07:10,800
好的。
OK.

113
00:07:11,090 --> 00:07:19,330
让我们再次创建4、1、2、3和4，因此我们将为1.60Faltu点PMG创建Touch
So let's let's create 4 1 2 3 and 4 again so we're going to create touch for 1.60 Faltu dot PMG for

114
00:07:19,350 --> 00:07:23,360
3.0 JPT和4 JPT给XTi博士，我们会再把它们做回来的。
3.0 JPT and 4 for Dr. XTi we'll make them back again.

115
00:07:23,450 --> 00:07:23,980
好的。
OK.

116
00:07:24,230 --> 00:07:30,500
现在，我们要删除其中包含数字2的所有文件。
Now we want to delete all of the files that have the number two in them.

117
00:07:31,420 --> 00:07:32,000
好的。
OK.

118
00:07:32,110 --> 00:07:33,450
那我们该怎么做呢。
So how would we do that.

119
00:07:33,670 --> 00:07:39,830
我们可以做的是，我们可能会说，好的，我们把它去掉。
Well what we might do is we might say OK let's remove.

120
00:07:40,150 --> 00:07:44,530
它从什么开始并不重要，但必须有两个人在那里，在哪里也不重要
It doesn't matter what it starts with but it's got to have the two in there and it doesn't matter where

121
00:07:44,530 --> 00:07:45,410
它的结尾是。
it ends in.

122
00:07:45,750 --> 00:07:51,120
好的，所以我们在这里，我们说它可以有任何东西，然后是数字2，然后是后面的任何东西。
OK so here we are we're saying it could have anything then the number two and then anything afterwards.

123
00:07:51,250 --> 00:07:56,500
因为如果我们这样做，我们会看到法尔图已经被删除，鞋黑2也被删除了，但是所有的
Because if we do that we see the Faltu has been deleted and shoeblack 2 has been deleted but all the

124
00:07:56,500 --> 00:07:57,930
其他人都很好。
others are OK.

125
00:07:58,150 --> 00:08:02,810
去掉那些以点杰皮结尾的怎么样？
What about getting rid of the ones that end in dot Jaypee.

126
00:08:03,130 --> 00:08:12,610
要做到这一点，使用所有RAM结束在Doc Jaypee中，我按Enter键获取三个JPT和SUPEME三个
Well to do that used to all RAM ends in Doc Jaypee I press enter for three JPT and sublime three have

127
00:08:12,610 --> 00:08:13,720
已被删除。
been deleted.

128
00:08:13,730 --> 00:08:15,940
其他人和何西蒂医生都还在那里。
All the others and the doctor he XTi are still there.

129
00:08:15,940 --> 00:08:20,580
删除那些R.M所有以Doctor XTi结尾的内容如何？按Enter键。
What about deleting those r.m everything that ends in Doctor XTi press enter.

130
00:08:20,770 --> 00:08:22,750
它们也都被删除了。
And they've all been deleted as well.

131
00:08:22,930 --> 00:08:28,570
因此您可以在这里看到通配符如何真正使您的命令变得更加强大
So you can see here how wild cards can really make the the your commands a whole lot more powerful and

132
00:08:28,570 --> 00:08:30,100
具体得多。
a lot more specific.

133
00:08:30,100 --> 00:08:32,340
还有一件事我想给你们看，我们上去吧。
There's one more that I want to show you let's just go up here.

134
00:08:32,820 --> 00:08:40,940
我们已经找回了我们的文件，让我们把火山灰喷出的问题文件也弄回来吧，PMG博士。
We've made back our files and let's make back ash blam problem files problem too doc PMG.

135
00:08:41,080 --> 00:08:44,770
我认为和崇高的三个顶尖的JPT。
I think and sublime three top JPT.

136
00:08:44,970 --> 00:08:45,570
好的。
OK.

137
00:08:45,580 --> 00:08:49,920
现在，如果我们想去掉里面有两到三个的那些怎么办？
Now what if we wanted to get rid of the ones that had two or three in them.

138
00:08:50,120 --> 00:08:53,730
你还记得我们是怎么到那个有两个人的地方的吗？
Well do you remember how we got to the one that had two in it.

139
00:08:53,740 --> 00:08:54,340
正确的。
Right.

140
00:08:54,340 --> 00:08:58,390
我们说它可以以任何形式开始，然后必须以任何形式结束。
We said it could start with anything then have to end in anything.

141
00:08:58,390 --> 00:09:00,150
现在我们想给它一些选择。
Well now we want to give it some options.

142
00:09:00,340 --> 00:09:02,770
这就是方括号的用武之地。
And this is where the square brackets come in.

143
00:09:02,800 --> 00:09:03,690
到目前为止，他说。
So far he said.

144
00:09:03,710 --> 00:09:04,900
好的。
OK.

145
00:09:05,590 --> 00:09:12,050
类似的东西，但是说它可以以任何东西开始，然后有两个或三个，然后结束
Something like that but saying it could start with anything then have either two or three and then ending

146
00:09:12,070 --> 00:09:13,060
什么都行。
anything.

147
00:09:13,060 --> 00:09:17,480
所以要去掉四、二、四、三，升华二、三。
So they should get rid of four two four three and sublime two and three.

148
00:09:17,490 --> 00:09:24,530
因此，如果震源法尔图和秋天三和问题二和三已经被删除。
So if hypocenter Faltu and fall three and problem two and three have been deleted.

149
00:09:24,670 --> 00:09:30,640
所以通配符是令人难以置信的工具，它真正允许您控制当您使用
So wild cards are incredible tools that really allow you to control what's going on when you use your

150
00:09:30,640 --> 00:09:36,190
命令和任何与此模式匹配的内容都将作为命令行参数传递给命令
commands and anything that matches this pattern will be passed as a command line arguments to the command

151
00:09:36,190 --> 00:09:37,790
你用通配符来做的事。
that you use the wild cards for.

152
00:09:37,810 --> 00:09:40,470
所以这也是一些通配符在起作用。
So that's a bit of wildcards in action as well.

153
00:09:41,770 --> 00:09:47,260
在这个视频中，您可以了解到r.m命令，r.m命令就是该命令
So there you have it in this video you learn about the r.m command that the r.m command is the command

154
00:09:47,260 --> 00:09:49,810
用于从您的文件系统中删除内容。
that's used to remove stuff from your file system.

155
00:09:49,810 --> 00:09:53,590
在这段视频中，我们特别关注删除文件。
And in this video we focus specifically on deleting files.

156
00:09:53,800 --> 00:09:59,170
您还在上一个视频中学到的通配符的基础上进行了构建，并看到了通配符的使用
You also built upon what you learned in the last video about wildcards and saw wild cards being used

157
00:09:59,530 --> 00:10:02,640
在删除文件的行动中。
in action to delete files.

158
00:10:02,650 --> 00:10:07,930
现在，您在本视频中看到的通配符不仅仅适用于r.m命令。
Now what you saw about wildcards in this video it doesn't only apply to the r.m command.

159
00:10:07,960 --> 00:10:13,600
您编写的有关通配符以及如何执行特定任务的内容适用于任何命令。
What you wrote about wildcards and how you might do specific tasks works for any command.

160
00:10:13,750 --> 00:10:19,270
您使用通配符构建称为正则表达式的模式，与这些模式匹配的任何内容都是
You build patterns called regular expressions with wildcards and whatever matches those patterns is

161
00:10:19,270 --> 00:10:22,960
作为命令行参数传递给您正在使用的命令。
passed as a command line argument to the command that you're using.

162
00:10:22,960 --> 00:10:27,020
因此，您已经在练习中看到了一些外卡。
So there you are you've seen some wild cards in practice as well.

163
00:10:27,070 --> 00:10:30,200
接下来我们要做的是，我们会更深入地展开这场讨论，我
Up next what we're going to be doing is we're going to be developing this discussion a bit more I'm

164
00:10:30,200 --> 00:10:34,210
接下来我们来看看如何删除目录。
going to move on to looking at how you might delete directories.

165
00:10:34,210 --> 00:10:35,680
你怎么能删除文件夹呢。
How can you delete folders.

166
00:10:35,680 --> 00:10:38,650
所以这是一个完全是下一个层次的东西，它可以是非常聪明的。
So that's a that's a completely next level it can be very smart and stuff.

167
00:10:38,740 --> 00:10:40,480
那么在下一个视频中再见吧。
So see you in the next video.

