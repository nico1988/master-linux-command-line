1
00:00:00,390 --> 00:00:05,460
Hello you beautiful people at the end of the last video I gave you a little bit of a teaser about something

2
00:00:05,460 --> 00:00:07,160
called aliases.

3
00:00:07,230 --> 00:00:12,990
Aliases are basically little nicknames for your commands or for your command pipelines that make them

4
00:00:12,990 --> 00:00:14,480
a lot easier to remember.

5
00:00:14,490 --> 00:00:19,460
Now in this video you're going to be learning how to create your very own command aliases.

6
00:00:19,470 --> 00:00:20,340
So very exciting.

7
00:00:20,350 --> 00:00:23,250
Now in this video I'm going to walk you through step by step.

8
00:00:23,280 --> 00:00:26,530
Everything you need to do to create your own command aliases.

9
00:00:26,670 --> 00:00:31,080
And by the end of the video you should have all the skills that you need in order to create easy to

10
00:00:31,080 --> 00:00:35,250
remember nicknames for your pipelines so that once you've written them no matter how complicated they

11
00:00:35,250 --> 00:00:40,620
are you can just use them over and over and over again without typing them all out just using instead

12
00:00:40,680 --> 00:00:42,790
the easy to remember nicknames.

13
00:00:42,810 --> 00:00:44,560
So this is super cool stuff.

14
00:00:44,670 --> 00:00:47,420
And let's go ahead and jump right into it.

15
00:00:48,760 --> 00:00:49,110
OK.

16
00:00:49,130 --> 00:00:53,750
So the first thing you need to do to start creating your own command aliases is to create a special

17
00:00:53,750 --> 00:00:57,720
file called bash aliases in your home folder.

18
00:00:57,830 --> 00:01:03,020
So to do that to create the file what we want to do is want to click on activities at the top left and

19
00:01:03,020 --> 00:01:08,400
then in the search bar here just type the word text and it should come up with the thing that says Here

20
00:01:08,420 --> 00:01:09,590
text editor.

21
00:01:09,590 --> 00:01:14,850
Just click on that and it will open up a new window where we've actually got a file.

22
00:01:14,870 --> 00:01:18,580
Now there's a button at the top here where you can click that says save.

23
00:01:18,580 --> 00:01:24,500
So I'm going to click save and in my home folder I'm going to type a file that starts that it needs

24
00:01:24,500 --> 00:01:27,150
to be spelled exactly the way that I'm going to tell you.

25
00:01:27,260 --> 00:01:27,700
OK.

26
00:01:27,890 --> 00:01:30,470
So first of all you type a period or full stop.

27
00:01:30,770 --> 00:01:31,320
OK.

28
00:01:31,640 --> 00:01:33,980
Then you type bash B.

29
00:01:34,030 --> 00:01:35,800
SH all in lowercase.

30
00:01:36,020 --> 00:01:43,060
Then an underscore then aliases so a L R A S E S.

31
00:01:43,070 --> 00:01:48,470
OK so that's bash underscore alias's with a period or full stop at the beginning.

32
00:01:48,470 --> 00:01:51,880
Everything in lowercase and then go ahead and hit save.

33
00:01:52,040 --> 00:01:52,460
OK.

34
00:01:52,610 --> 00:01:55,700
So now we have our bash alias's file.

35
00:01:55,700 --> 00:01:59,850
And actually I don't think for a minute we'll need the terminals so I'm going to close that as well.

36
00:01:59,990 --> 00:02:00,440
OK.

37
00:02:00,650 --> 00:02:03,090
So make sure it is spelt exactly as is appear.

38
00:02:03,140 --> 00:02:10,570
Full stop then bash underscore aliases a Al-Ali a s.c.s everything in lowercase.

39
00:02:10,640 --> 00:02:13,710
Once you've got the we should be all good to go.

40
00:02:13,710 --> 00:02:19,040
So now you might be wondering why did we actually need to name the file with a full stop at the beginning.

41
00:02:19,040 --> 00:02:22,090
That's quite strange we don't normally name files like that do we.

42
00:02:22,280 --> 00:02:27,600
Well that full stop makes the file a special type of file called a hidden file.

43
00:02:27,710 --> 00:02:33,620
So if we go back into the file browser here and we look in our home folder you'll see that the bash

44
00:02:33,680 --> 00:02:36,560
alias's file isn't actually there.

45
00:02:36,860 --> 00:02:37,850
Where has it gone.

46
00:02:37,910 --> 00:02:39,470
Well it's a hidden file.

47
00:02:39,920 --> 00:02:45,350
So it's kind of hidden but where it actually is if you click on this button here with the three bars

48
00:02:45,680 --> 00:02:51,870
if you click that and then click on down here there'll be a checkbox that says show hidden files.

49
00:02:51,870 --> 00:02:56,180
If we check that we'll be able to see that abash aliases fall has been created.

50
00:02:56,270 --> 00:03:01,650
But there are actually also plenty of other plenty of other hidden files here that we haven't seen before.

51
00:03:01,760 --> 00:03:06,290
But here we are here's our bash alias's file that we're currently editing as well as actually even some

52
00:03:06,290 --> 00:03:10,770
hidden folders that maybe you didn't even know were sneaking around your system.

53
00:03:10,820 --> 00:03:14,330
But anyway we don't need to worry about those fanatics just go ahead and click those three bars again

54
00:03:14,600 --> 00:03:18,600
and undo viewing hidden files so it all disappears again.

55
00:03:18,620 --> 00:03:22,790
So you know we don't have to continue looking at monsters under our bed and now we can go ahead and

56
00:03:22,790 --> 00:03:30,290
actually keep editing the bash aliases file a case and another we're in bash aliases file making an

57
00:03:30,290 --> 00:03:32,650
alias is actually really quite easy.

58
00:03:32,660 --> 00:03:34,960
So here's the command that we want to make an alias for.

59
00:03:34,970 --> 00:03:38,100
It's going to be a really long command with loads of complicated stuff in it.

60
00:03:38,240 --> 00:03:39,700
But we can do this.

61
00:03:39,780 --> 00:03:44,420
It's not there's nothing new it's just quite complex it's quite long so we're going can type the date

62
00:03:44,420 --> 00:03:45,240
command.

63
00:03:45,290 --> 00:03:48,460
We're going to pass that into the command.

64
00:03:48,470 --> 00:03:50,810
We've seen this a jillion times right.

65
00:03:50,810 --> 00:03:55,850
We're going to take that the delimiter is a space and we're going to get the first field.

66
00:03:56,000 --> 00:03:56,590
OK.

67
00:03:56,660 --> 00:03:59,620
Now we were also wanted to have a copy of that data.

68
00:03:59,630 --> 00:04:06,800
We want to take a snapshot so we can take the T command and save that in a file in our home folder called

69
00:04:06,920 --> 00:04:08,200
full date.

70
00:04:08,240 --> 00:04:17,090
Dr. ex-state Okay so we're doing well so far then we're going to take a snapshot of just the day of

71
00:04:17,090 --> 00:04:17,830
the week.

72
00:04:17,930 --> 00:04:23,640
We're going to save that in our home folder in a file called short date tactics.

73
00:04:24,140 --> 00:04:29,030
And then everything that comes out we're going to pass into the echo command but also give the echo

74
00:04:29,030 --> 00:04:32,700
command its own argument.

75
00:04:32,960 --> 00:04:34,090
That's quite a long comment.

76
00:04:34,140 --> 00:04:34,590
Right.

77
00:04:34,790 --> 00:04:38,180
So we're doing a lot of stuff in here.

78
00:04:38,720 --> 00:04:42,170
But the point is that it's long because you can see how useful alias's are right.

79
00:04:42,320 --> 00:04:48,320
So the only thing to make it work for your computer is instead of having Ziyad Well unless in the one

80
00:04:48,320 --> 00:04:53,570
in a jillion chance that your name is also Ziyad and you chose it to be your user name on your virtual

81
00:04:53,570 --> 00:04:55,570
machine which I think is unlikely.

82
00:04:55,700 --> 00:05:03,350
But if you are semi message but otherwise just go ahead and change that with your username so that it

83
00:05:03,440 --> 00:05:07,280
matches the correct path on your computer otherwise you're going to start getting errors like I said

84
00:05:07,540 --> 00:05:11,850
if you if your username was you know Saly just change it to me.

85
00:05:11,920 --> 00:05:14,920
Sally OK but mine was Ziyad so I'll keep it at that.

86
00:05:15,110 --> 00:05:15,450
OK.

87
00:05:15,590 --> 00:05:17,480
So this is the command that we want.

88
00:05:18,150 --> 00:05:19,540
Let's make an alias for it.

89
00:05:19,640 --> 00:05:24,350
Let's say for example we wanted to instead of typing out this massive command every time we wanted to

90
00:05:24,350 --> 00:05:25,970
do it instead of just typing it out.

91
00:05:26,000 --> 00:05:31,250
What if we wanted to just type get dates and that was going to be Alias.

92
00:05:31,440 --> 00:05:38,120
What all we have to do is just type the word alias which is a special word then press a space then get

93
00:05:38,240 --> 00:05:46,530
dates an equal sign and then an apostrophe on either side of that come on so you can see there's an

94
00:05:46,530 --> 00:05:47,580
apostrophe here.

95
00:05:48,360 --> 00:05:50,760
And there's an apostrophe here.

96
00:05:50,990 --> 00:05:51,820
OK.

97
00:05:51,860 --> 00:05:58,080
So like a single quote on either side of the whole massive command then alias at the beginning.

98
00:05:58,080 --> 00:06:05,950
The name of the alias an equal sign and then quotes on either side of the massive command.

99
00:06:05,950 --> 00:06:09,640
So what we're saying is hey I want to make an alias called get dates.

100
00:06:09,680 --> 00:06:11,910
That is exactly equal to this command.

101
00:06:11,910 --> 00:06:14,940
Now when we save it and close it.

102
00:06:15,000 --> 00:06:21,470
So we need to close the the editor so we go with click on these three these three bars over here.

103
00:06:21,480 --> 00:06:26,340
Click Close OK and close.

104
00:06:26,340 --> 00:06:29,720
All of this in general I think and just drag that down and close.

105
00:06:29,760 --> 00:06:37,820
And when we open at terminal one we reboot our terminal that alias should be loaded OK so I want you

106
00:06:37,820 --> 00:06:42,160
to think of these alias's as being like your own commands.

107
00:06:42,200 --> 00:06:42,640
OK.

108
00:06:42,710 --> 00:06:46,650
So if we try and run the get dates commands shall we call it.

109
00:06:46,780 --> 00:06:52,100
And if we go ahead and press ENTER remembering that get dates was the name of our alias we actually

110
00:06:52,100 --> 00:06:53,010
get some output.

111
00:06:53,020 --> 00:06:53,970
So that's pretty cool.

112
00:06:54,110 --> 00:07:01,320
Now if we go ahead and look in our in our home folder we'll also see that two new files have been created

113
00:07:01,330 --> 00:07:04,440
to full date dot text and short date dot text.

114
00:07:04,460 --> 00:07:07,750
So let's go ahead and take a look in for date that text.

115
00:07:08,180 --> 00:07:10,530
We've actually gone and got the full date.

116
00:07:10,550 --> 00:07:14,120
All the data has been passed into that and sure date DOT takes.

117
00:07:14,130 --> 00:07:18,590
He has had just the day of the week passed in is not awesome.

118
00:07:18,700 --> 00:07:18,940
OK.

119
00:07:18,940 --> 00:07:24,950
Because this has come from the alias if I delete those and go ahead and run to get dates come on again

120
00:07:26,060 --> 00:07:28,870
we see that the files have been created.

121
00:07:28,970 --> 00:07:31,280
One more time with the same data in them.

122
00:07:31,280 --> 00:07:32,750
So this is super cool right.

123
00:07:32,750 --> 00:07:38,600
Like instead of typing out that really really really long Aliase really really don't come and every

124
00:07:38,600 --> 00:07:43,970
time we wanted to get that functionality because we've created an alias and basically given a cute nickname

125
00:07:44,060 --> 00:07:49,970
to the command get dates instead of the massive pipeline we can now get the same functionality but in

126
00:07:49,970 --> 00:07:54,440
a much easier to remember way and the way that's actually easy to reproduce.

127
00:07:54,440 --> 00:07:55,650
So that's really awesome.

128
00:07:55,760 --> 00:07:57,530
But now let me show you something super cool.

129
00:07:57,590 --> 00:07:58,080
OK.

130
00:07:58,130 --> 00:08:02,380
You can actually also use aliases in bigger pipelines.

131
00:08:02,540 --> 00:08:05,680
So think of your aliases just being its own pipeline right.

132
00:08:05,780 --> 00:08:12,250
If your alias if that mini pipeline that you save can accept standard input if the first command in

133
00:08:12,250 --> 00:08:17,810
it can accept standard input then you can just pipe to the alias and run the whole pipeline and then

134
00:08:17,810 --> 00:08:22,520
pipe out of the alias and continue on it's like having your own little pipeline building block.

135
00:08:22,520 --> 00:08:23,540
So let me show you OK.

136
00:08:23,780 --> 00:08:29,000
Let's say that we wanted to have an alias for our command that showed a calendar with one month before

137
00:08:29,210 --> 00:08:34,330
and one month after the current month so that the con for that would be cow.

138
00:08:34,450 --> 00:08:36,970
Then a one be one.

139
00:08:36,990 --> 00:08:41,660
OK so after one month before one month and we get the current month with one month after I'm one month

140
00:08:41,870 --> 00:08:44,810
before the case that's the command.

141
00:08:44,810 --> 00:08:51,260
If we go and head back in here click these three horizontal arrows horizontal bars sorry and show hidden

142
00:08:51,260 --> 00:08:52,160
files.

143
00:08:52,160 --> 00:08:57,260
Click on our bash aliases files open up and go onto a new line in the file.

144
00:08:57,260 --> 00:08:59,530
Let's create a new alias for that command.

145
00:08:59,540 --> 00:09:01,150
OK so we're going to say.

146
00:09:01,610 --> 00:09:05,070
We're going to call magic short for calendar magic.

147
00:09:05,300 --> 00:09:08,940
I'm going to type an equal sign and then you can actually type some speech marks.

148
00:09:08,960 --> 00:09:10,850
OK you don't have to have the single quotes.

149
00:09:10,850 --> 00:09:12,780
You can have speech marks as well.

150
00:09:13,040 --> 00:09:14,590
I'm going to type that cow.

151
00:09:14,720 --> 00:09:16,640
Then the option.

152
00:09:16,640 --> 00:09:17,110
Give it.

153
00:09:17,180 --> 00:09:19,880
Number one is its own argument then a B.

154
00:09:20,120 --> 00:09:22,580
Capital B then one has its own argument.

155
00:09:22,580 --> 00:09:29,690
And we're going to output into a file in my home directory called Thing Dotty XTi And of course remember

156
00:09:29,690 --> 00:09:35,090
to replace this bit with your user name that you're using on your virtual machine.

157
00:09:35,090 --> 00:09:36,980
OK so we're going to call that magic.

158
00:09:37,310 --> 00:09:39,680
But the cow command here.

159
00:09:39,740 --> 00:09:40,140
Right.

160
00:09:40,280 --> 00:09:46,820
The cow command only accepts command line arguments you can't piped to the call command by default.

161
00:09:47,030 --> 00:09:52,080
So to make this a valid pipeline that you can access this this whole Cal magic thing a valid pipeline

162
00:09:52,100 --> 00:09:53,780
that you can pipe to.

163
00:09:53,960 --> 00:09:58,660
We need to actually put the X OGs command at the beginning.

164
00:09:58,670 --> 00:09:59,230
OK.

165
00:09:59,360 --> 00:10:00,890
So let's just do that.

166
00:10:00,890 --> 00:10:04,820
If you don't know what I'm doing at the minute just bear with me OK which is making a building block

167
00:10:05,150 --> 00:10:08,170
this whole thing that we can pipe to.

168
00:10:08,180 --> 00:10:08,670
OK.

169
00:10:08,780 --> 00:10:12,920
So that's what we've done right there now whatever is going to be piped to cow magic will actually be

170
00:10:12,920 --> 00:10:19,070
piped to the X Ogg's command which will then convert the data from standard input which Cal doesn't

171
00:10:19,070 --> 00:10:23,010
except to command line arguments which cow does accept.

172
00:10:23,120 --> 00:10:25,080
And so therefore the whole pipeline will work.

173
00:10:25,090 --> 00:10:25,970
It's going to be awesome.

174
00:10:25,970 --> 00:10:26,510
Just trust me.

175
00:10:26,510 --> 00:10:27,080
OK.

176
00:10:27,680 --> 00:10:35,270
Let's go ahead and do this let's close that save and close the close the close everything and close

177
00:10:35,270 --> 00:10:36,910
our terminal and reboot it.

178
00:10:37,030 --> 00:10:40,190
The press control alt and t talked about terminal nine.

179
00:10:40,220 --> 00:10:50,210
I echo 12 20:17 into Cowal magic what's going to happen is I'm going to be echoing this data as command

180
00:10:50,210 --> 00:10:52,190
line arguments to the magic command.

181
00:10:52,190 --> 00:10:59,800
So what we're expecting to happen is that we're expecting that we're going to get December 2017 the

182
00:10:59,810 --> 00:11:02,890
calendar for it with a month before and a month after.

183
00:11:02,920 --> 00:11:03,670
OK.

184
00:11:03,960 --> 00:11:06,160
Save to a file in our home directory.

185
00:11:06,170 --> 00:11:09,290
So if I press Enter we don't get any output.

186
00:11:09,530 --> 00:11:18,480
But if we go into our files here we will see that there is a file in here called things that takes take.

187
00:11:18,530 --> 00:11:24,140
We've actually managed to save the calendars for December so December 2017 one month before and one

188
00:11:24,140 --> 00:11:27,900
month after into a fall called things that takes t in our home folder.

189
00:11:28,010 --> 00:11:32,780
And the reason that happened is probably a lot easier to see if I actually get one of these hidden files.

190
00:11:33,230 --> 00:11:35,060
No no.

191
00:11:35,180 --> 00:11:38,090
I will I will keep them because otherwise I'll lose where I am.

192
00:11:38,090 --> 00:11:46,050
But what happened is we echoed we basically passed to the ex OGs command.

193
00:11:46,070 --> 00:11:51,560
Two pieces of information at 12 and 20:17 which were then given as command line arguments to the calendar

194
00:11:51,770 --> 00:11:52,440
command.

195
00:11:52,460 --> 00:11:57,380
So you can see how all this stuff is starting to tie together and we've made a mini pipeline called

196
00:11:57,380 --> 00:12:02,930
cowe magic that will now be able to run a command whenever we want so we don't have to type out this

197
00:12:02,960 --> 00:12:08,630
ugly thing we just have to know how magic and because we made it possible to pipe to the first command

198
00:12:08,660 --> 00:12:14,570
in our alias the whole pipeline will work and we can use it like a mini building block in whatever programs

199
00:12:14,600 --> 00:12:15,980
that we want to make.

200
00:12:15,980 --> 00:12:17,260
So how awesome is that right.

201
00:12:17,390 --> 00:12:22,820
Can you see how crazily powerful the ability to write alias's for pipelines and use those aliases in

202
00:12:23,070 --> 00:12:25,880
the pipelines can actually be right.

203
00:12:25,880 --> 00:12:30,940
The possibilities really are limitless with what you can achieve with that ability.

204
00:12:31,040 --> 00:12:32,620
So let's just leave it there.

205
00:12:32,710 --> 00:12:36,270
I'm going to leave your mind blown with that.

206
00:12:36,590 --> 00:12:40,210
Go ahead and now take a summary of what we've learned about alias's.

207
00:12:40,820 --> 00:12:43,300
OK so that's enough of being mind blowing for now.

208
00:12:43,310 --> 00:12:48,920
I hope you're as excited as I am by what you've learned in this video that aliasing aliasing is an absolutely

209
00:12:48,920 --> 00:12:53,190
incredible ability with really limitless potential if used in the right way.

210
00:12:53,300 --> 00:12:57,010
So let's just have a quick recap to make sure that you've got it all down.

211
00:12:57,020 --> 00:13:01,880
So in this video first of all you learn that an alias is basically just an easy to remember nickname

212
00:13:02,060 --> 00:13:05,550
for a command or series of commands joined together in a pipeline.

213
00:13:05,710 --> 00:13:12,770
Now to create an alias you need to first have a file called dot dash underscore aliases or in lowercase

214
00:13:13,130 --> 00:13:14,810
in your home folder.

215
00:13:14,810 --> 00:13:20,000
And that's where you actually put your data file that you actually put your aliases in and these aliases

216
00:13:20,000 --> 00:13:23,530
therefore will be specific to your user.

217
00:13:24,260 --> 00:13:30,050
Now as a bonus point you learn a period or full stop or a dot at the start of a file name makes that

218
00:13:30,050 --> 00:13:31,350
file hidden.

219
00:13:31,460 --> 00:13:38,040
So and you also saw how to turn on or off the visibility of hidden files in your file viewer.

220
00:13:38,160 --> 00:13:38,800
OK.

221
00:13:38,930 --> 00:13:41,580
Now inside the bash aliases file.

222
00:13:41,660 --> 00:13:43,710
So that is actually quite easy to make an alias.

223
00:13:43,730 --> 00:13:43,910
Right.

224
00:13:43,910 --> 00:13:49,310
This is the way that you do it first you type the key word alias all in lowercase.

225
00:13:49,490 --> 00:13:52,010
Then you put a space and then you put the alias name.

226
00:13:52,010 --> 00:13:56,870
So as we get dates or it was call magic or whatever you want to call it that's your nickname.

227
00:13:56,870 --> 00:13:57,310
OK.

228
00:13:57,560 --> 00:14:02,630
Then you put an equal sign without adding a space with space at all between the alias and the equal

229
00:14:02,630 --> 00:14:04,080
sign you put in.

230
00:14:04,160 --> 00:14:06,140
So you just put an equal sign immediately.

231
00:14:06,320 --> 00:14:07,640
Then you open some quotes.

232
00:14:07,640 --> 00:14:12,230
These quotes can be either single quotes using an apostrophe or you know normal double quotes like you

233
00:14:12,230 --> 00:14:15,830
would use for speech marks again without any spaces without any gaps.

234
00:14:16,940 --> 00:14:22,140
Between the equal sign then you just create your pipeline or you use your command.

235
00:14:22,340 --> 00:14:25,670
Again you can have options and command monogamists just like you normally would.

236
00:14:25,660 --> 00:14:28,520
OK these can go on for as long as you want.

237
00:14:28,520 --> 00:14:28,970
OK.

238
00:14:29,150 --> 00:14:37,180
Now as long as you make sure that you restart your terminal you'll then have access to that alias forever.

239
00:14:37,340 --> 00:14:37,810
OK.

240
00:14:38,000 --> 00:14:42,230
And as another bonus point looking you look you get two bonus points in the summary should be should

241
00:14:42,230 --> 00:14:43,390
be feel very spoiled.

242
00:14:43,520 --> 00:14:50,090
But as long as you make sure the first command in that alias in that pipeline can actually be piped

243
00:14:50,090 --> 00:14:57,530
to OK then you can just pipe to the alias pope to the nickname and you'll it as if you're piping to

244
00:14:57,530 --> 00:14:59,840
the whole pipeline.

245
00:15:00,320 --> 00:15:03,870
If I say the word pipe one more time I'm probably going to go insane.

246
00:15:04,670 --> 00:15:06,220
But you get the point right.

247
00:15:06,260 --> 00:15:13,460
If you make it so that your pipeline can be piped to either by using the X OGs command or by just using

248
00:15:13,460 --> 00:15:18,950
a normal command that can accept standard input then instead of having to you can basically use the

249
00:15:19,280 --> 00:15:25,790
alias that many pipeline as a tiny building block in some massive other pipeline that you're building

250
00:15:26,090 --> 00:15:29,810
to create a really epic bit of functionality.

251
00:15:29,810 --> 00:15:35,900
OK so alias is used in the right way with what you've learnt about piping and X args and all sorts of

252
00:15:35,900 --> 00:15:39,620
stuff making these long pipelines is an epic epic ability.

253
00:15:39,620 --> 00:15:45,500
So now you can build your own command pipelines and even save them for use later when you understand

254
00:15:45,500 --> 00:15:51,620
that basically anything in the Linux operating system can be modified using command line.

255
00:15:51,700 --> 00:15:55,690
You really are the crown jewel that makes the Linux operating system so amazing because anything can

256
00:15:55,690 --> 00:15:57,170
be edited using the command line.

257
00:15:57,310 --> 00:16:00,940
And you know had to create these come on how to use these commands and piped them all together to do

258
00:16:00,940 --> 00:16:02,340
whatever you want.

259
00:16:02,350 --> 00:16:05,680
You've really got a master key that take your computing to the next level.

260
00:16:05,690 --> 00:16:09,970
But in order to take advantage of this all you need now are just simple building blocks to actually

261
00:16:09,970 --> 00:16:10,890
build pipelines with.

262
00:16:10,900 --> 00:16:11,460
Right.

263
00:16:11,470 --> 00:16:15,730
So in the next section of the course we're actually going to be covering a whole bunch of those building

264
00:16:15,730 --> 00:16:20,950
blocks because the next section of the Course is all about navigating your file system creating manipulating

265
00:16:20,950 --> 00:16:26,400
files making folders copying and pasting files creating backups of your system and so much more.

266
00:16:26,470 --> 00:16:30,640
But before we get into all that goodness I want to make sure that you understand everything that we've

267
00:16:30,640 --> 00:16:36,490
covered in this entire section of the course first because it's been an incredibly foundational incredibly

268
00:16:36,490 --> 00:16:38,310
important section of the course.

269
00:16:38,320 --> 00:16:43,510
If you understand everything in this section you will not go far wrong with anything else you learn

270
00:16:43,570 --> 00:16:44,450
when using Linux.

271
00:16:44,530 --> 00:16:50,260
And I also want to make sure your Jewely congratulated for your amazing progress so far.

272
00:16:50,260 --> 00:16:55,090
You really really deserve to have some recognition of what you've done in this section what you've learned

273
00:16:55,090 --> 00:16:56,170
at how far you've come.

274
00:16:56,230 --> 00:16:59,980
So in the next video we're going to have a celebration of your really impressive progress and a quick

275
00:16:59,980 --> 00:17:01,890
recap of what we've covered in the section.

276
00:17:01,900 --> 00:17:03,160
It's going to be awesome.

277
00:17:03,160 --> 00:17:06,270
So review the section and some well-deserved celebration and praises.

278
00:17:06,280 --> 00:17:07,960
I will see you in the next video.
